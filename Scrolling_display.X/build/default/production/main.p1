Version 3.2 HI-TECH Software Intermediate Code
"78 main.c
[c E1851 0 1 2 3 4 5 6 7 8 .. ]
[n E1851 not_number_buttons DEFAULT NO_PRESS A A_LONG B C D HASH STAR  ]
"56 C:\Program Files (x86)\Microchip\xc8\v1.44\include\string.h
[v _strlen `(ui ~T0 @X0 0 ef1`*Cuc ]
"3227 C:\Program Files (x86)\Microchip\xc8\v1.44\include\pic16f886.h
[v _ANSEL `Vuc ~T0 @X0 0 e@392 ]
"3271
[v _ANSELH `Vuc ~T0 @X0 0 e@393 ]
"1335
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"1459
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"164
[v _PORTA `Vuc ~T0 @X0 0 e@5 ]
"1397
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"170
[s S6 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S6 . RA0 RA1 RA2 RA3 RA4 RA5 RA6 RA7 ]
"169
[u S5 `S6 1 ]
[n S5 . . ]
"181
[v _PORTAbits `VS5 ~T0 @X0 0 e@5 ]
"691
[v _T2CON `Vuc ~T0 @X0 0 e@18 ]
"684
[v _TMR2 `Vuc ~T0 @X0 0 e@17 ]
"1881
[v _PR2 `Vuc ~T0 @X0 0 e@146 ]
"462
[s S17 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S17 . TMR1IF TMR2IF CCP1IF SSPIF TXIF RCIF ADIF ]
"461
[u S16 `S17 1 ]
[n S16 . . ]
"472
[v _PIR1bits `VS16 ~T0 @X0 0 e@12 ]
"57
[v _TMR0 `Vuc ~T0 @X0 0 e@1 ]
"1265
[v _OPTION_REG `Vuc ~T0 @X0 0 e@129 ]
"226
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"384
[s S14 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S14 . RBIF INTF T0IF RBIE INTE T0IE PEIE GIE ]
"394
[s S15 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S15 . . TMR0IF . TMR0IE ]
"383
[u S13 `S14 1 `S15 1 ]
[n S13 . . . ]
"401
[v _INTCONbits `VS13 ~T0 @X0 0 e@11 ]
"2256
[v _IOCB `Vuc ~T0 @X0 0 e@150 ]
"2186
[v _WPUB `Vuc ~T0 @X0 0 e@149 ]
"294
[s S10 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S10 . RC0 RC1 RC2 RC3 RC4 RC5 RC6 RC7 ]
"293
[u S9 `S10 1 ]
[n S9 . . ]
"305
[v _PORTCbits `VS9 ~T0 @X0 0 e@7 ]
[v F1552 `(v ~T0 @X0 1 tf1`ul ]
"153 C:\Program Files (x86)\Microchip\xc8\v1.44\include\pic.h
[v __delay `JF1552 ~T0 @X0 0 e ]
[p i __delay ]
"114 C:\Program Files (x86)\Microchip\xc8\v1.44\include\eeprom_routines.h
[v _eeprom_write `(v ~T0 @X0 0 ef2`uc`uc ]
"115
[v _eeprom_read `(uc ~T0 @X0 0 ef1`uc ]
"697 C:\Program Files (x86)\Microchip\xc8\v1.44\include\pic16f886.h
[s S25 :2 `uc 1 :1 `uc 1 :4 `uc 1 ]
[n S25 . T2CKPS TMR2ON TOUTPS ]
"702
[s S26 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S26 . T2CKPS0 T2CKPS1 . TOUTPS0 TOUTPS1 TOUTPS2 TOUTPS3 ]
"696
[u S24 `S25 1 `S26 1 ]
[n S24 . . . ]
"712
[v _T2CONbits `VS24 ~T0 @X0 0 e@18 ]
"232
[s S8 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S8 . RB0 RB1 RB2 RB3 RB4 RB5 RB6 RB7 ]
"231
[u S7 `S8 1 ]
[n S7 . . ]
"243
[v _PORTBbits `VS7 ~T0 @X0 0 e@6 ]
[p mainexit ]
"3900
[v _TMR2IF `Vb ~T0 @X0 0 e@97 ]
"39 C:\Program Files (x86)\Microchip\xc8\v1.44\include\string.h
[v _strncpy `(*uc ~T0 @X0 0 ef3`*uc`*Cuc`ui ]
"38
[v _strncat `(*uc ~T0 @X0 0 ef3`*uc`*Cuc`ui ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16f886.h: 50: extern volatile unsigned char INDF @ 0x000;
"52 C:\Program Files (x86)\Microchip\xc8\v1.44\include\pic16f886.h
[; ;pic16f886.h: 52: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f886.h: 57: extern volatile unsigned char TMR0 @ 0x001;
"59
[; ;pic16f886.h: 59: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f886.h: 64: extern volatile unsigned char PCL @ 0x002;
"66
[; ;pic16f886.h: 66: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f886.h: 71: extern volatile unsigned char STATUS @ 0x003;
"73
[; ;pic16f886.h: 73: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f886.h: 76: typedef union {
[; ;pic16f886.h: 77: struct {
[; ;pic16f886.h: 78: unsigned C :1;
[; ;pic16f886.h: 79: unsigned DC :1;
[; ;pic16f886.h: 80: unsigned Z :1;
[; ;pic16f886.h: 81: unsigned nPD :1;
[; ;pic16f886.h: 82: unsigned nTO :1;
[; ;pic16f886.h: 83: unsigned RP :2;
[; ;pic16f886.h: 84: unsigned IRP :1;
[; ;pic16f886.h: 85: };
[; ;pic16f886.h: 86: struct {
[; ;pic16f886.h: 87: unsigned :5;
[; ;pic16f886.h: 88: unsigned RP0 :1;
[; ;pic16f886.h: 89: unsigned RP1 :1;
[; ;pic16f886.h: 90: };
[; ;pic16f886.h: 91: struct {
[; ;pic16f886.h: 92: unsigned CARRY :1;
[; ;pic16f886.h: 93: unsigned :1;
[; ;pic16f886.h: 94: unsigned ZERO :1;
[; ;pic16f886.h: 95: };
[; ;pic16f886.h: 96: } STATUSbits_t;
[; ;pic16f886.h: 97: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f886.h: 157: extern volatile unsigned char FSR @ 0x004;
"159
[; ;pic16f886.h: 159: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f886.h: 164: extern volatile unsigned char PORTA @ 0x005;
"166
[; ;pic16f886.h: 166: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f886.h: 169: typedef union {
[; ;pic16f886.h: 170: struct {
[; ;pic16f886.h: 171: unsigned RA0 :1;
[; ;pic16f886.h: 172: unsigned RA1 :1;
[; ;pic16f886.h: 173: unsigned RA2 :1;
[; ;pic16f886.h: 174: unsigned RA3 :1;
[; ;pic16f886.h: 175: unsigned RA4 :1;
[; ;pic16f886.h: 176: unsigned RA5 :1;
[; ;pic16f886.h: 177: unsigned RA6 :1;
[; ;pic16f886.h: 178: unsigned RA7 :1;
[; ;pic16f886.h: 179: };
[; ;pic16f886.h: 180: } PORTAbits_t;
[; ;pic16f886.h: 181: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f886.h: 226: extern volatile unsigned char PORTB @ 0x006;
"228
[; ;pic16f886.h: 228: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f886.h: 231: typedef union {
[; ;pic16f886.h: 232: struct {
[; ;pic16f886.h: 233: unsigned RB0 :1;
[; ;pic16f886.h: 234: unsigned RB1 :1;
[; ;pic16f886.h: 235: unsigned RB2 :1;
[; ;pic16f886.h: 236: unsigned RB3 :1;
[; ;pic16f886.h: 237: unsigned RB4 :1;
[; ;pic16f886.h: 238: unsigned RB5 :1;
[; ;pic16f886.h: 239: unsigned RB6 :1;
[; ;pic16f886.h: 240: unsigned RB7 :1;
[; ;pic16f886.h: 241: };
[; ;pic16f886.h: 242: } PORTBbits_t;
[; ;pic16f886.h: 243: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f886.h: 288: extern volatile unsigned char PORTC @ 0x007;
"290
[; ;pic16f886.h: 290: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f886.h: 293: typedef union {
[; ;pic16f886.h: 294: struct {
[; ;pic16f886.h: 295: unsigned RC0 :1;
[; ;pic16f886.h: 296: unsigned RC1 :1;
[; ;pic16f886.h: 297: unsigned RC2 :1;
[; ;pic16f886.h: 298: unsigned RC3 :1;
[; ;pic16f886.h: 299: unsigned RC4 :1;
[; ;pic16f886.h: 300: unsigned RC5 :1;
[; ;pic16f886.h: 301: unsigned RC6 :1;
[; ;pic16f886.h: 302: unsigned RC7 :1;
[; ;pic16f886.h: 303: };
[; ;pic16f886.h: 304: } PORTCbits_t;
[; ;pic16f886.h: 305: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f886.h: 350: extern volatile unsigned char PORTE @ 0x009;
"352
[; ;pic16f886.h: 352: asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
[; ;pic16f886.h: 355: typedef union {
[; ;pic16f886.h: 356: struct {
[; ;pic16f886.h: 357: unsigned :3;
[; ;pic16f886.h: 358: unsigned RE3 :1;
[; ;pic16f886.h: 359: };
[; ;pic16f886.h: 360: } PORTEbits_t;
[; ;pic16f886.h: 361: extern volatile PORTEbits_t PORTEbits @ 0x009;
[; ;pic16f886.h: 371: extern volatile unsigned char PCLATH @ 0x00A;
"373
[; ;pic16f886.h: 373: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f886.h: 378: extern volatile unsigned char INTCON @ 0x00B;
"380
[; ;pic16f886.h: 380: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f886.h: 383: typedef union {
[; ;pic16f886.h: 384: struct {
[; ;pic16f886.h: 385: unsigned RBIF :1;
[; ;pic16f886.h: 386: unsigned INTF :1;
[; ;pic16f886.h: 387: unsigned T0IF :1;
[; ;pic16f886.h: 388: unsigned RBIE :1;
[; ;pic16f886.h: 389: unsigned INTE :1;
[; ;pic16f886.h: 390: unsigned T0IE :1;
[; ;pic16f886.h: 391: unsigned PEIE :1;
[; ;pic16f886.h: 392: unsigned GIE :1;
[; ;pic16f886.h: 393: };
[; ;pic16f886.h: 394: struct {
[; ;pic16f886.h: 395: unsigned :2;
[; ;pic16f886.h: 396: unsigned TMR0IF :1;
[; ;pic16f886.h: 397: unsigned :2;
[; ;pic16f886.h: 398: unsigned TMR0IE :1;
[; ;pic16f886.h: 399: };
[; ;pic16f886.h: 400: } INTCONbits_t;
[; ;pic16f886.h: 401: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f886.h: 456: extern volatile unsigned char PIR1 @ 0x00C;
"458
[; ;pic16f886.h: 458: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f886.h: 461: typedef union {
[; ;pic16f886.h: 462: struct {
[; ;pic16f886.h: 463: unsigned TMR1IF :1;
[; ;pic16f886.h: 464: unsigned TMR2IF :1;
[; ;pic16f886.h: 465: unsigned CCP1IF :1;
[; ;pic16f886.h: 466: unsigned SSPIF :1;
[; ;pic16f886.h: 467: unsigned TXIF :1;
[; ;pic16f886.h: 468: unsigned RCIF :1;
[; ;pic16f886.h: 469: unsigned ADIF :1;
[; ;pic16f886.h: 470: };
[; ;pic16f886.h: 471: } PIR1bits_t;
[; ;pic16f886.h: 472: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f886.h: 512: extern volatile unsigned char PIR2 @ 0x00D;
"514
[; ;pic16f886.h: 514: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f886.h: 517: typedef union {
[; ;pic16f886.h: 518: struct {
[; ;pic16f886.h: 519: unsigned CCP2IF :1;
[; ;pic16f886.h: 520: unsigned :1;
[; ;pic16f886.h: 521: unsigned ULPWUIF :1;
[; ;pic16f886.h: 522: unsigned BCLIF :1;
[; ;pic16f886.h: 523: unsigned EEIF :1;
[; ;pic16f886.h: 524: unsigned C1IF :1;
[; ;pic16f886.h: 525: unsigned C2IF :1;
[; ;pic16f886.h: 526: unsigned OSFIF :1;
[; ;pic16f886.h: 527: };
[; ;pic16f886.h: 528: } PIR2bits_t;
[; ;pic16f886.h: 529: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16f886.h: 569: extern volatile unsigned short TMR1 @ 0x00E;
"571
[; ;pic16f886.h: 571: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f886.h: 576: extern volatile unsigned char TMR1L @ 0x00E;
"578
[; ;pic16f886.h: 578: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f886.h: 583: extern volatile unsigned char TMR1H @ 0x00F;
"585
[; ;pic16f886.h: 585: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f886.h: 590: extern volatile unsigned char T1CON @ 0x010;
"592
[; ;pic16f886.h: 592: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f886.h: 595: typedef union {
[; ;pic16f886.h: 596: struct {
[; ;pic16f886.h: 597: unsigned TMR1ON :1;
[; ;pic16f886.h: 598: unsigned TMR1CS :1;
[; ;pic16f886.h: 599: unsigned nT1SYNC :1;
[; ;pic16f886.h: 600: unsigned T1OSCEN :1;
[; ;pic16f886.h: 601: unsigned T1CKPS :2;
[; ;pic16f886.h: 602: unsigned TMR1GE :1;
[; ;pic16f886.h: 603: unsigned T1GINV :1;
[; ;pic16f886.h: 604: };
[; ;pic16f886.h: 605: struct {
[; ;pic16f886.h: 606: unsigned :2;
[; ;pic16f886.h: 607: unsigned T1INSYNC :1;
[; ;pic16f886.h: 608: unsigned :1;
[; ;pic16f886.h: 609: unsigned T1CKPS0 :1;
[; ;pic16f886.h: 610: unsigned T1CKPS1 :1;
[; ;pic16f886.h: 611: unsigned :1;
[; ;pic16f886.h: 612: unsigned T1GIV :1;
[; ;pic16f886.h: 613: };
[; ;pic16f886.h: 614: struct {
[; ;pic16f886.h: 615: unsigned :2;
[; ;pic16f886.h: 616: unsigned T1SYNC :1;
[; ;pic16f886.h: 617: };
[; ;pic16f886.h: 618: } T1CONbits_t;
[; ;pic16f886.h: 619: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f886.h: 684: extern volatile unsigned char TMR2 @ 0x011;
"686
[; ;pic16f886.h: 686: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f886.h: 691: extern volatile unsigned char T2CON @ 0x012;
"693
[; ;pic16f886.h: 693: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f886.h: 696: typedef union {
[; ;pic16f886.h: 697: struct {
[; ;pic16f886.h: 698: unsigned T2CKPS :2;
[; ;pic16f886.h: 699: unsigned TMR2ON :1;
[; ;pic16f886.h: 700: unsigned TOUTPS :4;
[; ;pic16f886.h: 701: };
[; ;pic16f886.h: 702: struct {
[; ;pic16f886.h: 703: unsigned T2CKPS0 :1;
[; ;pic16f886.h: 704: unsigned T2CKPS1 :1;
[; ;pic16f886.h: 705: unsigned :1;
[; ;pic16f886.h: 706: unsigned TOUTPS0 :1;
[; ;pic16f886.h: 707: unsigned TOUTPS1 :1;
[; ;pic16f886.h: 708: unsigned TOUTPS2 :1;
[; ;pic16f886.h: 709: unsigned TOUTPS3 :1;
[; ;pic16f886.h: 710: };
[; ;pic16f886.h: 711: } T2CONbits_t;
[; ;pic16f886.h: 712: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f886.h: 762: extern volatile unsigned char SSPBUF @ 0x013;
"764
[; ;pic16f886.h: 764: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f886.h: 769: extern volatile unsigned char SSPCON @ 0x014;
"771
[; ;pic16f886.h: 771: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f886.h: 774: typedef union {
[; ;pic16f886.h: 775: struct {
[; ;pic16f886.h: 776: unsigned SSPM :4;
[; ;pic16f886.h: 777: unsigned CKP :1;
[; ;pic16f886.h: 778: unsigned SSPEN :1;
[; ;pic16f886.h: 779: unsigned SSPOV :1;
[; ;pic16f886.h: 780: unsigned WCOL :1;
[; ;pic16f886.h: 781: };
[; ;pic16f886.h: 782: struct {
[; ;pic16f886.h: 783: unsigned SSPM0 :1;
[; ;pic16f886.h: 784: unsigned SSPM1 :1;
[; ;pic16f886.h: 785: unsigned SSPM2 :1;
[; ;pic16f886.h: 786: unsigned SSPM3 :1;
[; ;pic16f886.h: 787: };
[; ;pic16f886.h: 788: } SSPCONbits_t;
[; ;pic16f886.h: 789: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16f886.h: 839: extern volatile unsigned short CCPR1 @ 0x015;
"841
[; ;pic16f886.h: 841: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f886.h: 846: extern volatile unsigned char CCPR1L @ 0x015;
"848
[; ;pic16f886.h: 848: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f886.h: 853: extern volatile unsigned char CCPR1H @ 0x016;
"855
[; ;pic16f886.h: 855: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f886.h: 860: extern volatile unsigned char CCP1CON @ 0x017;
"862
[; ;pic16f886.h: 862: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f886.h: 865: typedef union {
[; ;pic16f886.h: 866: struct {
[; ;pic16f886.h: 867: unsigned CCP1M :4;
[; ;pic16f886.h: 868: unsigned DC1B :2;
[; ;pic16f886.h: 869: unsigned P1M :2;
[; ;pic16f886.h: 870: };
[; ;pic16f886.h: 871: struct {
[; ;pic16f886.h: 872: unsigned CCP1M0 :1;
[; ;pic16f886.h: 873: unsigned CCP1M1 :1;
[; ;pic16f886.h: 874: unsigned CCP1M2 :1;
[; ;pic16f886.h: 875: unsigned CCP1M3 :1;
[; ;pic16f886.h: 876: unsigned DC1B0 :1;
[; ;pic16f886.h: 877: unsigned DC1B1 :1;
[; ;pic16f886.h: 878: unsigned P1M0 :1;
[; ;pic16f886.h: 879: unsigned P1M1 :1;
[; ;pic16f886.h: 880: };
[; ;pic16f886.h: 881: struct {
[; ;pic16f886.h: 882: unsigned :4;
[; ;pic16f886.h: 883: unsigned CCP1Y :1;
[; ;pic16f886.h: 884: unsigned CCP1X :1;
[; ;pic16f886.h: 885: };
[; ;pic16f886.h: 886: } CCP1CONbits_t;
[; ;pic16f886.h: 887: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f886.h: 957: extern volatile unsigned char RCSTA @ 0x018;
"959
[; ;pic16f886.h: 959: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f886.h: 962: typedef union {
[; ;pic16f886.h: 963: struct {
[; ;pic16f886.h: 964: unsigned RX9D :1;
[; ;pic16f886.h: 965: unsigned OERR :1;
[; ;pic16f886.h: 966: unsigned FERR :1;
[; ;pic16f886.h: 967: unsigned ADDEN :1;
[; ;pic16f886.h: 968: unsigned CREN :1;
[; ;pic16f886.h: 969: unsigned SREN :1;
[; ;pic16f886.h: 970: unsigned RX9 :1;
[; ;pic16f886.h: 971: unsigned SPEN :1;
[; ;pic16f886.h: 972: };
[; ;pic16f886.h: 973: struct {
[; ;pic16f886.h: 974: unsigned RCD8 :1;
[; ;pic16f886.h: 975: unsigned :5;
[; ;pic16f886.h: 976: unsigned RC9 :1;
[; ;pic16f886.h: 977: };
[; ;pic16f886.h: 978: struct {
[; ;pic16f886.h: 979: unsigned :6;
[; ;pic16f886.h: 980: unsigned nRC8 :1;
[; ;pic16f886.h: 981: };
[; ;pic16f886.h: 982: struct {
[; ;pic16f886.h: 983: unsigned :6;
[; ;pic16f886.h: 984: unsigned RC8_9 :1;
[; ;pic16f886.h: 985: };
[; ;pic16f886.h: 986: } RCSTAbits_t;
[; ;pic16f886.h: 987: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f886.h: 1052: extern volatile unsigned char TXREG @ 0x019;
"1054
[; ;pic16f886.h: 1054: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f886.h: 1059: extern volatile unsigned char RCREG @ 0x01A;
"1061
[; ;pic16f886.h: 1061: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f886.h: 1066: extern volatile unsigned short CCPR2 @ 0x01B;
"1068
[; ;pic16f886.h: 1068: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f886.h: 1073: extern volatile unsigned char CCPR2L @ 0x01B;
"1075
[; ;pic16f886.h: 1075: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f886.h: 1080: extern volatile unsigned char CCPR2H @ 0x01C;
"1082
[; ;pic16f886.h: 1082: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f886.h: 1087: extern volatile unsigned char CCP2CON @ 0x01D;
"1089
[; ;pic16f886.h: 1089: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f886.h: 1092: typedef union {
[; ;pic16f886.h: 1093: struct {
[; ;pic16f886.h: 1094: unsigned CCP2M :4;
[; ;pic16f886.h: 1095: unsigned DC2B0 :1;
[; ;pic16f886.h: 1096: unsigned DC2B1 :1;
[; ;pic16f886.h: 1097: };
[; ;pic16f886.h: 1098: struct {
[; ;pic16f886.h: 1099: unsigned CCP2M0 :1;
[; ;pic16f886.h: 1100: unsigned CCP2M1 :1;
[; ;pic16f886.h: 1101: unsigned CCP2M2 :1;
[; ;pic16f886.h: 1102: unsigned CCP2M3 :1;
[; ;pic16f886.h: 1103: unsigned CCP2Y :1;
[; ;pic16f886.h: 1104: unsigned CCP2X :1;
[; ;pic16f886.h: 1105: };
[; ;pic16f886.h: 1106: } CCP2CONbits_t;
[; ;pic16f886.h: 1107: extern volatile CCP2CONbits_t CCP2CONbits @ 0x01D;
[; ;pic16f886.h: 1157: extern volatile unsigned char ADRESH @ 0x01E;
"1159
[; ;pic16f886.h: 1159: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f886.h: 1164: extern volatile unsigned char ADCON0 @ 0x01F;
"1166
[; ;pic16f886.h: 1166: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f886.h: 1169: typedef union {
[; ;pic16f886.h: 1170: struct {
[; ;pic16f886.h: 1171: unsigned ADON :1;
[; ;pic16f886.h: 1172: unsigned GO_nDONE :1;
[; ;pic16f886.h: 1173: unsigned CHS :4;
[; ;pic16f886.h: 1174: unsigned ADCS :2;
[; ;pic16f886.h: 1175: };
[; ;pic16f886.h: 1176: struct {
[; ;pic16f886.h: 1177: unsigned :1;
[; ;pic16f886.h: 1178: unsigned GO :1;
[; ;pic16f886.h: 1179: unsigned CHS0 :1;
[; ;pic16f886.h: 1180: unsigned CHS1 :1;
[; ;pic16f886.h: 1181: unsigned CHS2 :1;
[; ;pic16f886.h: 1182: unsigned CHS3 :1;
[; ;pic16f886.h: 1183: unsigned ADCS0 :1;
[; ;pic16f886.h: 1184: unsigned ADCS1 :1;
[; ;pic16f886.h: 1185: };
[; ;pic16f886.h: 1186: struct {
[; ;pic16f886.h: 1187: unsigned :1;
[; ;pic16f886.h: 1188: unsigned nDONE :1;
[; ;pic16f886.h: 1189: };
[; ;pic16f886.h: 1190: struct {
[; ;pic16f886.h: 1191: unsigned :1;
[; ;pic16f886.h: 1192: unsigned GO_DONE :1;
[; ;pic16f886.h: 1193: };
[; ;pic16f886.h: 1194: } ADCON0bits_t;
[; ;pic16f886.h: 1195: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f886.h: 1265: extern volatile unsigned char OPTION_REG @ 0x081;
"1267
[; ;pic16f886.h: 1267: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f886.h: 1270: typedef union {
[; ;pic16f886.h: 1271: struct {
[; ;pic16f886.h: 1272: unsigned PS :3;
[; ;pic16f886.h: 1273: unsigned PSA :1;
[; ;pic16f886.h: 1274: unsigned T0SE :1;
[; ;pic16f886.h: 1275: unsigned T0CS :1;
[; ;pic16f886.h: 1276: unsigned INTEDG :1;
[; ;pic16f886.h: 1277: unsigned nRBPU :1;
[; ;pic16f886.h: 1278: };
[; ;pic16f886.h: 1279: struct {
[; ;pic16f886.h: 1280: unsigned PS0 :1;
[; ;pic16f886.h: 1281: unsigned PS1 :1;
[; ;pic16f886.h: 1282: unsigned PS2 :1;
[; ;pic16f886.h: 1283: };
[; ;pic16f886.h: 1284: } OPTION_REGbits_t;
[; ;pic16f886.h: 1285: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f886.h: 1335: extern volatile unsigned char TRISA @ 0x085;
"1337
[; ;pic16f886.h: 1337: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f886.h: 1340: typedef union {
[; ;pic16f886.h: 1341: struct {
[; ;pic16f886.h: 1342: unsigned TRISA0 :1;
[; ;pic16f886.h: 1343: unsigned TRISA1 :1;
[; ;pic16f886.h: 1344: unsigned TRISA2 :1;
[; ;pic16f886.h: 1345: unsigned TRISA3 :1;
[; ;pic16f886.h: 1346: unsigned TRISA4 :1;
[; ;pic16f886.h: 1347: unsigned TRISA5 :1;
[; ;pic16f886.h: 1348: unsigned TRISA6 :1;
[; ;pic16f886.h: 1349: unsigned TRISA7 :1;
[; ;pic16f886.h: 1350: };
[; ;pic16f886.h: 1351: } TRISAbits_t;
[; ;pic16f886.h: 1352: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f886.h: 1397: extern volatile unsigned char TRISB @ 0x086;
"1399
[; ;pic16f886.h: 1399: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f886.h: 1402: typedef union {
[; ;pic16f886.h: 1403: struct {
[; ;pic16f886.h: 1404: unsigned TRISB0 :1;
[; ;pic16f886.h: 1405: unsigned TRISB1 :1;
[; ;pic16f886.h: 1406: unsigned TRISB2 :1;
[; ;pic16f886.h: 1407: unsigned TRISB3 :1;
[; ;pic16f886.h: 1408: unsigned TRISB4 :1;
[; ;pic16f886.h: 1409: unsigned TRISB5 :1;
[; ;pic16f886.h: 1410: unsigned TRISB6 :1;
[; ;pic16f886.h: 1411: unsigned TRISB7 :1;
[; ;pic16f886.h: 1412: };
[; ;pic16f886.h: 1413: } TRISBbits_t;
[; ;pic16f886.h: 1414: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f886.h: 1459: extern volatile unsigned char TRISC @ 0x087;
"1461
[; ;pic16f886.h: 1461: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f886.h: 1464: typedef union {
[; ;pic16f886.h: 1465: struct {
[; ;pic16f886.h: 1466: unsigned TRISC0 :1;
[; ;pic16f886.h: 1467: unsigned TRISC1 :1;
[; ;pic16f886.h: 1468: unsigned TRISC2 :1;
[; ;pic16f886.h: 1469: unsigned TRISC3 :1;
[; ;pic16f886.h: 1470: unsigned TRISC4 :1;
[; ;pic16f886.h: 1471: unsigned TRISC5 :1;
[; ;pic16f886.h: 1472: unsigned TRISC6 :1;
[; ;pic16f886.h: 1473: unsigned TRISC7 :1;
[; ;pic16f886.h: 1474: };
[; ;pic16f886.h: 1475: } TRISCbits_t;
[; ;pic16f886.h: 1476: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f886.h: 1521: extern volatile unsigned char TRISE @ 0x089;
"1523
[; ;pic16f886.h: 1523: asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
[; ;pic16f886.h: 1526: typedef union {
[; ;pic16f886.h: 1527: struct {
[; ;pic16f886.h: 1528: unsigned :3;
[; ;pic16f886.h: 1529: unsigned TRISE3 :1;
[; ;pic16f886.h: 1530: };
[; ;pic16f886.h: 1531: } TRISEbits_t;
[; ;pic16f886.h: 1532: extern volatile TRISEbits_t TRISEbits @ 0x089;
[; ;pic16f886.h: 1542: extern volatile unsigned char PIE1 @ 0x08C;
"1544
[; ;pic16f886.h: 1544: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f886.h: 1547: typedef union {
[; ;pic16f886.h: 1548: struct {
[; ;pic16f886.h: 1549: unsigned TMR1IE :1;
[; ;pic16f886.h: 1550: unsigned TMR2IE :1;
[; ;pic16f886.h: 1551: unsigned CCP1IE :1;
[; ;pic16f886.h: 1552: unsigned SSPIE :1;
[; ;pic16f886.h: 1553: unsigned TXIE :1;
[; ;pic16f886.h: 1554: unsigned RCIE :1;
[; ;pic16f886.h: 1555: unsigned ADIE :1;
[; ;pic16f886.h: 1556: };
[; ;pic16f886.h: 1557: } PIE1bits_t;
[; ;pic16f886.h: 1558: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f886.h: 1598: extern volatile unsigned char PIE2 @ 0x08D;
"1600
[; ;pic16f886.h: 1600: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f886.h: 1603: typedef union {
[; ;pic16f886.h: 1604: struct {
[; ;pic16f886.h: 1605: unsigned CCP2IE :1;
[; ;pic16f886.h: 1606: unsigned :1;
[; ;pic16f886.h: 1607: unsigned ULPWUIE :1;
[; ;pic16f886.h: 1608: unsigned BCLIE :1;
[; ;pic16f886.h: 1609: unsigned EEIE :1;
[; ;pic16f886.h: 1610: unsigned C1IE :1;
[; ;pic16f886.h: 1611: unsigned C2IE :1;
[; ;pic16f886.h: 1612: unsigned OSFIE :1;
[; ;pic16f886.h: 1613: };
[; ;pic16f886.h: 1614: } PIE2bits_t;
[; ;pic16f886.h: 1615: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16f886.h: 1655: extern volatile unsigned char PCON @ 0x08E;
"1657
[; ;pic16f886.h: 1657: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f886.h: 1660: typedef union {
[; ;pic16f886.h: 1661: struct {
[; ;pic16f886.h: 1662: unsigned nBOR :1;
[; ;pic16f886.h: 1663: unsigned nPOR :1;
[; ;pic16f886.h: 1664: unsigned :2;
[; ;pic16f886.h: 1665: unsigned SBOREN :1;
[; ;pic16f886.h: 1666: unsigned ULPWUE :1;
[; ;pic16f886.h: 1667: };
[; ;pic16f886.h: 1668: struct {
[; ;pic16f886.h: 1669: unsigned nBO :1;
[; ;pic16f886.h: 1670: };
[; ;pic16f886.h: 1671: } PCONbits_t;
[; ;pic16f886.h: 1672: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f886.h: 1702: extern volatile unsigned char OSCCON @ 0x08F;
"1704
[; ;pic16f886.h: 1704: asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
[; ;pic16f886.h: 1707: typedef union {
[; ;pic16f886.h: 1708: struct {
[; ;pic16f886.h: 1709: unsigned SCS :1;
[; ;pic16f886.h: 1710: unsigned LTS :1;
[; ;pic16f886.h: 1711: unsigned HTS :1;
[; ;pic16f886.h: 1712: unsigned OSTS :1;
[; ;pic16f886.h: 1713: unsigned IRCF :3;
[; ;pic16f886.h: 1714: };
[; ;pic16f886.h: 1715: struct {
[; ;pic16f886.h: 1716: unsigned :4;
[; ;pic16f886.h: 1717: unsigned IRCF0 :1;
[; ;pic16f886.h: 1718: unsigned IRCF1 :1;
[; ;pic16f886.h: 1719: unsigned IRCF2 :1;
[; ;pic16f886.h: 1720: };
[; ;pic16f886.h: 1721: } OSCCONbits_t;
[; ;pic16f886.h: 1722: extern volatile OSCCONbits_t OSCCONbits @ 0x08F;
[; ;pic16f886.h: 1767: extern volatile unsigned char OSCTUNE @ 0x090;
"1769
[; ;pic16f886.h: 1769: asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
[; ;pic16f886.h: 1772: typedef union {
[; ;pic16f886.h: 1773: struct {
[; ;pic16f886.h: 1774: unsigned TUN :5;
[; ;pic16f886.h: 1775: };
[; ;pic16f886.h: 1776: struct {
[; ;pic16f886.h: 1777: unsigned TUN0 :1;
[; ;pic16f886.h: 1778: unsigned TUN1 :1;
[; ;pic16f886.h: 1779: unsigned TUN2 :1;
[; ;pic16f886.h: 1780: unsigned TUN3 :1;
[; ;pic16f886.h: 1781: unsigned TUN4 :1;
[; ;pic16f886.h: 1782: };
[; ;pic16f886.h: 1783: } OSCTUNEbits_t;
[; ;pic16f886.h: 1784: extern volatile OSCTUNEbits_t OSCTUNEbits @ 0x090;
[; ;pic16f886.h: 1819: extern volatile unsigned char SSPCON2 @ 0x091;
"1821
[; ;pic16f886.h: 1821: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16f886.h: 1824: typedef union {
[; ;pic16f886.h: 1825: struct {
[; ;pic16f886.h: 1826: unsigned SEN :1;
[; ;pic16f886.h: 1827: unsigned RSEN :1;
[; ;pic16f886.h: 1828: unsigned PEN :1;
[; ;pic16f886.h: 1829: unsigned RCEN :1;
[; ;pic16f886.h: 1830: unsigned ACKEN :1;
[; ;pic16f886.h: 1831: unsigned ACKDT :1;
[; ;pic16f886.h: 1832: unsigned ACKSTAT :1;
[; ;pic16f886.h: 1833: unsigned GCEN :1;
[; ;pic16f886.h: 1834: };
[; ;pic16f886.h: 1835: } SSPCON2bits_t;
[; ;pic16f886.h: 1836: extern volatile SSPCON2bits_t SSPCON2bits @ 0x091;
[; ;pic16f886.h: 1881: extern volatile unsigned char PR2 @ 0x092;
"1883
[; ;pic16f886.h: 1883: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f886.h: 1888: extern volatile unsigned char SSPADD @ 0x093;
"1890
[; ;pic16f886.h: 1890: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f886.h: 1895: extern volatile unsigned char SSPMSK @ 0x093;
"1897
[; ;pic16f886.h: 1897: asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
[; ;pic16f886.h: 1900: extern volatile unsigned char MSK @ 0x093;
"1902
[; ;pic16f886.h: 1902: asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
[; ;pic16f886.h: 1905: typedef union {
[; ;pic16f886.h: 1906: struct {
[; ;pic16f886.h: 1907: unsigned MSK0 :1;
[; ;pic16f886.h: 1908: unsigned MSK1 :1;
[; ;pic16f886.h: 1909: unsigned MSK2 :1;
[; ;pic16f886.h: 1910: unsigned MSK3 :1;
[; ;pic16f886.h: 1911: unsigned MSK4 :1;
[; ;pic16f886.h: 1912: unsigned MSK5 :1;
[; ;pic16f886.h: 1913: unsigned MSK6 :1;
[; ;pic16f886.h: 1914: unsigned MSK7 :1;
[; ;pic16f886.h: 1915: };
[; ;pic16f886.h: 1916: } SSPMSKbits_t;
[; ;pic16f886.h: 1917: extern volatile SSPMSKbits_t SSPMSKbits @ 0x093;
[; ;pic16f886.h: 1960: typedef union {
[; ;pic16f886.h: 1961: struct {
[; ;pic16f886.h: 1962: unsigned MSK0 :1;
[; ;pic16f886.h: 1963: unsigned MSK1 :1;
[; ;pic16f886.h: 1964: unsigned MSK2 :1;
[; ;pic16f886.h: 1965: unsigned MSK3 :1;
[; ;pic16f886.h: 1966: unsigned MSK4 :1;
[; ;pic16f886.h: 1967: unsigned MSK5 :1;
[; ;pic16f886.h: 1968: unsigned MSK6 :1;
[; ;pic16f886.h: 1969: unsigned MSK7 :1;
[; ;pic16f886.h: 1970: };
[; ;pic16f886.h: 1971: } MSKbits_t;
[; ;pic16f886.h: 1972: extern volatile MSKbits_t MSKbits @ 0x093;
[; ;pic16f886.h: 2017: extern volatile unsigned char SSPSTAT @ 0x094;
"2019
[; ;pic16f886.h: 2019: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f886.h: 2022: typedef union {
[; ;pic16f886.h: 2023: struct {
[; ;pic16f886.h: 2024: unsigned BF :1;
[; ;pic16f886.h: 2025: unsigned UA :1;
[; ;pic16f886.h: 2026: unsigned R_nW :1;
[; ;pic16f886.h: 2027: unsigned S :1;
[; ;pic16f886.h: 2028: unsigned P :1;
[; ;pic16f886.h: 2029: unsigned D_nA :1;
[; ;pic16f886.h: 2030: unsigned CKE :1;
[; ;pic16f886.h: 2031: unsigned SMP :1;
[; ;pic16f886.h: 2032: };
[; ;pic16f886.h: 2033: struct {
[; ;pic16f886.h: 2034: unsigned :2;
[; ;pic16f886.h: 2035: unsigned R :1;
[; ;pic16f886.h: 2036: unsigned :2;
[; ;pic16f886.h: 2037: unsigned D :1;
[; ;pic16f886.h: 2038: };
[; ;pic16f886.h: 2039: struct {
[; ;pic16f886.h: 2040: unsigned :2;
[; ;pic16f886.h: 2041: unsigned I2C_READ :1;
[; ;pic16f886.h: 2042: unsigned I2C_START :1;
[; ;pic16f886.h: 2043: unsigned I2C_STOP :1;
[; ;pic16f886.h: 2044: unsigned I2C_DATA :1;
[; ;pic16f886.h: 2045: };
[; ;pic16f886.h: 2046: struct {
[; ;pic16f886.h: 2047: unsigned :2;
[; ;pic16f886.h: 2048: unsigned nW :1;
[; ;pic16f886.h: 2049: unsigned :2;
[; ;pic16f886.h: 2050: unsigned nA :1;
[; ;pic16f886.h: 2051: };
[; ;pic16f886.h: 2052: struct {
[; ;pic16f886.h: 2053: unsigned :2;
[; ;pic16f886.h: 2054: unsigned nWRITE :1;
[; ;pic16f886.h: 2055: unsigned :2;
[; ;pic16f886.h: 2056: unsigned nADDRESS :1;
[; ;pic16f886.h: 2057: };
[; ;pic16f886.h: 2058: struct {
[; ;pic16f886.h: 2059: unsigned :2;
[; ;pic16f886.h: 2060: unsigned R_W :1;
[; ;pic16f886.h: 2061: unsigned :2;
[; ;pic16f886.h: 2062: unsigned D_A :1;
[; ;pic16f886.h: 2063: };
[; ;pic16f886.h: 2064: struct {
[; ;pic16f886.h: 2065: unsigned :2;
[; ;pic16f886.h: 2066: unsigned READ_WRITE :1;
[; ;pic16f886.h: 2067: unsigned :2;
[; ;pic16f886.h: 2068: unsigned DATA_ADDRESS :1;
[; ;pic16f886.h: 2069: };
[; ;pic16f886.h: 2070: } SSPSTATbits_t;
[; ;pic16f886.h: 2071: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16f886.h: 2186: extern volatile unsigned char WPUB @ 0x095;
"2188
[; ;pic16f886.h: 2188: asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
[; ;pic16f886.h: 2191: typedef union {
[; ;pic16f886.h: 2192: struct {
[; ;pic16f886.h: 2193: unsigned WPUB :8;
[; ;pic16f886.h: 2194: };
[; ;pic16f886.h: 2195: struct {
[; ;pic16f886.h: 2196: unsigned WPUB0 :1;
[; ;pic16f886.h: 2197: unsigned WPUB1 :1;
[; ;pic16f886.h: 2198: unsigned WPUB2 :1;
[; ;pic16f886.h: 2199: unsigned WPUB3 :1;
[; ;pic16f886.h: 2200: unsigned WPUB4 :1;
[; ;pic16f886.h: 2201: unsigned WPUB5 :1;
[; ;pic16f886.h: 2202: unsigned WPUB6 :1;
[; ;pic16f886.h: 2203: unsigned WPUB7 :1;
[; ;pic16f886.h: 2204: };
[; ;pic16f886.h: 2205: } WPUBbits_t;
[; ;pic16f886.h: 2206: extern volatile WPUBbits_t WPUBbits @ 0x095;
[; ;pic16f886.h: 2256: extern volatile unsigned char IOCB @ 0x096;
"2258
[; ;pic16f886.h: 2258: asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
[; ;pic16f886.h: 2261: typedef union {
[; ;pic16f886.h: 2262: struct {
[; ;pic16f886.h: 2263: unsigned IOCB :8;
[; ;pic16f886.h: 2264: };
[; ;pic16f886.h: 2265: struct {
[; ;pic16f886.h: 2266: unsigned IOCB0 :1;
[; ;pic16f886.h: 2267: unsigned IOCB1 :1;
[; ;pic16f886.h: 2268: unsigned IOCB2 :1;
[; ;pic16f886.h: 2269: unsigned IOCB3 :1;
[; ;pic16f886.h: 2270: unsigned IOCB4 :1;
[; ;pic16f886.h: 2271: unsigned IOCB5 :1;
[; ;pic16f886.h: 2272: unsigned IOCB6 :1;
[; ;pic16f886.h: 2273: unsigned IOCB7 :1;
[; ;pic16f886.h: 2274: };
[; ;pic16f886.h: 2275: } IOCBbits_t;
[; ;pic16f886.h: 2276: extern volatile IOCBbits_t IOCBbits @ 0x096;
[; ;pic16f886.h: 2326: extern volatile unsigned char VRCON @ 0x097;
"2328
[; ;pic16f886.h: 2328: asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
[; ;pic16f886.h: 2331: typedef union {
[; ;pic16f886.h: 2332: struct {
[; ;pic16f886.h: 2333: unsigned VR :4;
[; ;pic16f886.h: 2334: unsigned VRSS :1;
[; ;pic16f886.h: 2335: unsigned VRR :1;
[; ;pic16f886.h: 2336: unsigned VROE :1;
[; ;pic16f886.h: 2337: unsigned VREN :1;
[; ;pic16f886.h: 2338: };
[; ;pic16f886.h: 2339: struct {
[; ;pic16f886.h: 2340: unsigned VR0 :1;
[; ;pic16f886.h: 2341: unsigned VR1 :1;
[; ;pic16f886.h: 2342: unsigned VR2 :1;
[; ;pic16f886.h: 2343: unsigned VR3 :1;
[; ;pic16f886.h: 2344: };
[; ;pic16f886.h: 2345: } VRCONbits_t;
[; ;pic16f886.h: 2346: extern volatile VRCONbits_t VRCONbits @ 0x097;
[; ;pic16f886.h: 2396: extern volatile unsigned char TXSTA @ 0x098;
"2398
[; ;pic16f886.h: 2398: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f886.h: 2401: typedef union {
[; ;pic16f886.h: 2402: struct {
[; ;pic16f886.h: 2403: unsigned TX9D :1;
[; ;pic16f886.h: 2404: unsigned TRMT :1;
[; ;pic16f886.h: 2405: unsigned BRGH :1;
[; ;pic16f886.h: 2406: unsigned SENDB :1;
[; ;pic16f886.h: 2407: unsigned SYNC :1;
[; ;pic16f886.h: 2408: unsigned TXEN :1;
[; ;pic16f886.h: 2409: unsigned TX9 :1;
[; ;pic16f886.h: 2410: unsigned CSRC :1;
[; ;pic16f886.h: 2411: };
[; ;pic16f886.h: 2412: struct {
[; ;pic16f886.h: 2413: unsigned TXD8 :1;
[; ;pic16f886.h: 2414: unsigned :5;
[; ;pic16f886.h: 2415: unsigned nTX8 :1;
[; ;pic16f886.h: 2416: };
[; ;pic16f886.h: 2417: struct {
[; ;pic16f886.h: 2418: unsigned :6;
[; ;pic16f886.h: 2419: unsigned TX8_9 :1;
[; ;pic16f886.h: 2420: };
[; ;pic16f886.h: 2421: } TXSTAbits_t;
[; ;pic16f886.h: 2422: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f886.h: 2482: extern volatile unsigned char SPBRG @ 0x099;
"2484
[; ;pic16f886.h: 2484: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f886.h: 2487: typedef union {
[; ;pic16f886.h: 2488: struct {
[; ;pic16f886.h: 2489: unsigned BRG0 :1;
[; ;pic16f886.h: 2490: unsigned BRG1 :1;
[; ;pic16f886.h: 2491: unsigned BRG2 :1;
[; ;pic16f886.h: 2492: unsigned BRG3 :1;
[; ;pic16f886.h: 2493: unsigned BRG4 :1;
[; ;pic16f886.h: 2494: unsigned BRG5 :1;
[; ;pic16f886.h: 2495: unsigned BRG6 :1;
[; ;pic16f886.h: 2496: unsigned BRG7 :1;
[; ;pic16f886.h: 2497: };
[; ;pic16f886.h: 2498: } SPBRGbits_t;
[; ;pic16f886.h: 2499: extern volatile SPBRGbits_t SPBRGbits @ 0x099;
[; ;pic16f886.h: 2544: extern volatile unsigned char SPBRGH @ 0x09A;
"2546
[; ;pic16f886.h: 2546: asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
[; ;pic16f886.h: 2549: typedef union {
[; ;pic16f886.h: 2550: struct {
[; ;pic16f886.h: 2551: unsigned SPBRGH :8;
[; ;pic16f886.h: 2552: };
[; ;pic16f886.h: 2553: struct {
[; ;pic16f886.h: 2554: unsigned BRG8 :1;
[; ;pic16f886.h: 2555: unsigned BRG9 :1;
[; ;pic16f886.h: 2556: unsigned BRG10 :1;
[; ;pic16f886.h: 2557: unsigned BRG11 :1;
[; ;pic16f886.h: 2558: unsigned BRG12 :1;
[; ;pic16f886.h: 2559: unsigned BRG13 :1;
[; ;pic16f886.h: 2560: unsigned BRG14 :1;
[; ;pic16f886.h: 2561: unsigned BRG15 :1;
[; ;pic16f886.h: 2562: };
[; ;pic16f886.h: 2563: } SPBRGHbits_t;
[; ;pic16f886.h: 2564: extern volatile SPBRGHbits_t SPBRGHbits @ 0x09A;
[; ;pic16f886.h: 2614: extern volatile unsigned char PWM1CON @ 0x09B;
"2616
[; ;pic16f886.h: 2616: asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
[; ;pic16f886.h: 2619: typedef union {
[; ;pic16f886.h: 2620: struct {
[; ;pic16f886.h: 2621: unsigned PDC :7;
[; ;pic16f886.h: 2622: unsigned PRSEN :1;
[; ;pic16f886.h: 2623: };
[; ;pic16f886.h: 2624: struct {
[; ;pic16f886.h: 2625: unsigned PDC0 :1;
[; ;pic16f886.h: 2626: unsigned PDC1 :1;
[; ;pic16f886.h: 2627: unsigned PDC2 :1;
[; ;pic16f886.h: 2628: unsigned PDC3 :1;
[; ;pic16f886.h: 2629: unsigned PDC4 :1;
[; ;pic16f886.h: 2630: unsigned PDC5 :1;
[; ;pic16f886.h: 2631: unsigned PDC6 :1;
[; ;pic16f886.h: 2632: };
[; ;pic16f886.h: 2633: } PWM1CONbits_t;
[; ;pic16f886.h: 2634: extern volatile PWM1CONbits_t PWM1CONbits @ 0x09B;
[; ;pic16f886.h: 2684: extern volatile unsigned char ECCPAS @ 0x09C;
"2686
[; ;pic16f886.h: 2686: asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
[; ;pic16f886.h: 2689: typedef union {
[; ;pic16f886.h: 2690: struct {
[; ;pic16f886.h: 2691: unsigned PSSBD :2;
[; ;pic16f886.h: 2692: unsigned PSSAC :2;
[; ;pic16f886.h: 2693: unsigned ECCPAS :3;
[; ;pic16f886.h: 2694: unsigned ECCPASE :1;
[; ;pic16f886.h: 2695: };
[; ;pic16f886.h: 2696: struct {
[; ;pic16f886.h: 2697: unsigned PSSBD0 :1;
[; ;pic16f886.h: 2698: unsigned PSSBD1 :1;
[; ;pic16f886.h: 2699: unsigned PSSAC0 :1;
[; ;pic16f886.h: 2700: unsigned PSSAC1 :1;
[; ;pic16f886.h: 2701: unsigned ECCPAS0 :1;
[; ;pic16f886.h: 2702: unsigned ECCPAS1 :1;
[; ;pic16f886.h: 2703: unsigned ECCPAS2 :1;
[; ;pic16f886.h: 2704: };
[; ;pic16f886.h: 2705: } ECCPASbits_t;
[; ;pic16f886.h: 2706: extern volatile ECCPASbits_t ECCPASbits @ 0x09C;
[; ;pic16f886.h: 2766: extern volatile unsigned char PSTRCON @ 0x09D;
"2768
[; ;pic16f886.h: 2768: asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
[; ;pic16f886.h: 2771: typedef union {
[; ;pic16f886.h: 2772: struct {
[; ;pic16f886.h: 2773: unsigned STRA :1;
[; ;pic16f886.h: 2774: unsigned STRB :1;
[; ;pic16f886.h: 2775: unsigned STRC :1;
[; ;pic16f886.h: 2776: unsigned STRD :1;
[; ;pic16f886.h: 2777: unsigned STRSYNC :1;
[; ;pic16f886.h: 2778: };
[; ;pic16f886.h: 2779: } PSTRCONbits_t;
[; ;pic16f886.h: 2780: extern volatile PSTRCONbits_t PSTRCONbits @ 0x09D;
[; ;pic16f886.h: 2810: extern volatile unsigned char ADRESL @ 0x09E;
"2812
[; ;pic16f886.h: 2812: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f886.h: 2817: extern volatile unsigned char ADCON1 @ 0x09F;
"2819
[; ;pic16f886.h: 2819: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f886.h: 2822: typedef union {
[; ;pic16f886.h: 2823: struct {
[; ;pic16f886.h: 2824: unsigned :4;
[; ;pic16f886.h: 2825: unsigned VCFG0 :1;
[; ;pic16f886.h: 2826: unsigned VCFG1 :1;
[; ;pic16f886.h: 2827: unsigned :1;
[; ;pic16f886.h: 2828: unsigned ADFM :1;
[; ;pic16f886.h: 2829: };
[; ;pic16f886.h: 2830: } ADCON1bits_t;
[; ;pic16f886.h: 2831: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f886.h: 2851: extern volatile unsigned char WDTCON @ 0x105;
"2853
[; ;pic16f886.h: 2853: asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
[; ;pic16f886.h: 2856: typedef union {
[; ;pic16f886.h: 2857: struct {
[; ;pic16f886.h: 2858: unsigned SWDTEN :1;
[; ;pic16f886.h: 2859: unsigned WDTPS :4;
[; ;pic16f886.h: 2860: };
[; ;pic16f886.h: 2861: struct {
[; ;pic16f886.h: 2862: unsigned :1;
[; ;pic16f886.h: 2863: unsigned WDTPS0 :1;
[; ;pic16f886.h: 2864: unsigned WDTPS1 :1;
[; ;pic16f886.h: 2865: unsigned WDTPS2 :1;
[; ;pic16f886.h: 2866: unsigned WDTPS3 :1;
[; ;pic16f886.h: 2867: };
[; ;pic16f886.h: 2868: } WDTCONbits_t;
[; ;pic16f886.h: 2869: extern volatile WDTCONbits_t WDTCONbits @ 0x105;
[; ;pic16f886.h: 2904: extern volatile unsigned char CM1CON0 @ 0x107;
"2906
[; ;pic16f886.h: 2906: asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
[; ;pic16f886.h: 2909: typedef union {
[; ;pic16f886.h: 2910: struct {
[; ;pic16f886.h: 2911: unsigned C1CH :2;
[; ;pic16f886.h: 2912: unsigned C1R :1;
[; ;pic16f886.h: 2913: unsigned :1;
[; ;pic16f886.h: 2914: unsigned C1POL :1;
[; ;pic16f886.h: 2915: unsigned C1OE :1;
[; ;pic16f886.h: 2916: unsigned C1OUT :1;
[; ;pic16f886.h: 2917: unsigned C1ON :1;
[; ;pic16f886.h: 2918: };
[; ;pic16f886.h: 2919: struct {
[; ;pic16f886.h: 2920: unsigned C1CH0 :1;
[; ;pic16f886.h: 2921: unsigned C1CH1 :1;
[; ;pic16f886.h: 2922: };
[; ;pic16f886.h: 2923: } CM1CON0bits_t;
[; ;pic16f886.h: 2924: extern volatile CM1CON0bits_t CM1CON0bits @ 0x107;
[; ;pic16f886.h: 2969: extern volatile unsigned char CM2CON0 @ 0x108;
"2971
[; ;pic16f886.h: 2971: asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
[; ;pic16f886.h: 2974: typedef union {
[; ;pic16f886.h: 2975: struct {
[; ;pic16f886.h: 2976: unsigned C2CH :2;
[; ;pic16f886.h: 2977: unsigned C2R :1;
[; ;pic16f886.h: 2978: unsigned :1;
[; ;pic16f886.h: 2979: unsigned C2POL :1;
[; ;pic16f886.h: 2980: unsigned C2OE :1;
[; ;pic16f886.h: 2981: unsigned C2OUT :1;
[; ;pic16f886.h: 2982: unsigned C2ON :1;
[; ;pic16f886.h: 2983: };
[; ;pic16f886.h: 2984: struct {
[; ;pic16f886.h: 2985: unsigned C2CH0 :1;
[; ;pic16f886.h: 2986: unsigned C2CH1 :1;
[; ;pic16f886.h: 2987: };
[; ;pic16f886.h: 2988: } CM2CON0bits_t;
[; ;pic16f886.h: 2989: extern volatile CM2CON0bits_t CM2CON0bits @ 0x108;
[; ;pic16f886.h: 3034: extern volatile unsigned char CM2CON1 @ 0x109;
"3036
[; ;pic16f886.h: 3036: asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
[; ;pic16f886.h: 3039: typedef union {
[; ;pic16f886.h: 3040: struct {
[; ;pic16f886.h: 3041: unsigned C2SYNC :1;
[; ;pic16f886.h: 3042: unsigned T1GSS :1;
[; ;pic16f886.h: 3043: unsigned :2;
[; ;pic16f886.h: 3044: unsigned C2RSEL :1;
[; ;pic16f886.h: 3045: unsigned C1RSEL :1;
[; ;pic16f886.h: 3046: unsigned MC2OUT :1;
[; ;pic16f886.h: 3047: unsigned MC1OUT :1;
[; ;pic16f886.h: 3048: };
[; ;pic16f886.h: 3049: } CM2CON1bits_t;
[; ;pic16f886.h: 3050: extern volatile CM2CON1bits_t CM2CON1bits @ 0x109;
[; ;pic16f886.h: 3085: extern volatile unsigned char EEDATA @ 0x10C;
"3087
[; ;pic16f886.h: 3087: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16f886.h: 3090: extern volatile unsigned char EEDAT @ 0x10C;
"3092
[; ;pic16f886.h: 3092: asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
[; ;pic16f886.h: 3097: extern volatile unsigned char EEADR @ 0x10D;
"3099
[; ;pic16f886.h: 3099: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16f886.h: 3104: extern volatile unsigned char EEDATH @ 0x10E;
"3106
[; ;pic16f886.h: 3106: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16f886.h: 3111: extern volatile unsigned char EEADRH @ 0x10F;
"3113
[; ;pic16f886.h: 3113: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16f886.h: 3118: extern volatile unsigned char SRCON @ 0x185;
"3120
[; ;pic16f886.h: 3120: asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
[; ;pic16f886.h: 3123: typedef union {
[; ;pic16f886.h: 3124: struct {
[; ;pic16f886.h: 3125: unsigned FVREN :1;
[; ;pic16f886.h: 3126: unsigned :1;
[; ;pic16f886.h: 3127: unsigned PULSR :1;
[; ;pic16f886.h: 3128: unsigned PULSS :1;
[; ;pic16f886.h: 3129: unsigned C2REN :1;
[; ;pic16f886.h: 3130: unsigned C1SEN :1;
[; ;pic16f886.h: 3131: unsigned SR0 :1;
[; ;pic16f886.h: 3132: unsigned SR1 :1;
[; ;pic16f886.h: 3133: };
[; ;pic16f886.h: 3134: } SRCONbits_t;
[; ;pic16f886.h: 3135: extern volatile SRCONbits_t SRCONbits @ 0x185;
[; ;pic16f886.h: 3175: extern volatile unsigned char BAUDCTL @ 0x187;
"3177
[; ;pic16f886.h: 3177: asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
[; ;pic16f886.h: 3180: typedef union {
[; ;pic16f886.h: 3181: struct {
[; ;pic16f886.h: 3182: unsigned ABDEN :1;
[; ;pic16f886.h: 3183: unsigned WUE :1;
[; ;pic16f886.h: 3184: unsigned :1;
[; ;pic16f886.h: 3185: unsigned BRG16 :1;
[; ;pic16f886.h: 3186: unsigned SCKP :1;
[; ;pic16f886.h: 3187: unsigned :1;
[; ;pic16f886.h: 3188: unsigned RCIDL :1;
[; ;pic16f886.h: 3189: unsigned ABDOVF :1;
[; ;pic16f886.h: 3190: };
[; ;pic16f886.h: 3191: } BAUDCTLbits_t;
[; ;pic16f886.h: 3192: extern volatile BAUDCTLbits_t BAUDCTLbits @ 0x187;
[; ;pic16f886.h: 3227: extern volatile unsigned char ANSEL @ 0x188;
"3229
[; ;pic16f886.h: 3229: asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
[; ;pic16f886.h: 3232: typedef union {
[; ;pic16f886.h: 3233: struct {
[; ;pic16f886.h: 3234: unsigned ANS0 :1;
[; ;pic16f886.h: 3235: unsigned ANS1 :1;
[; ;pic16f886.h: 3236: unsigned ANS2 :1;
[; ;pic16f886.h: 3237: unsigned ANS3 :1;
[; ;pic16f886.h: 3238: unsigned ANS4 :1;
[; ;pic16f886.h: 3239: };
[; ;pic16f886.h: 3240: } ANSELbits_t;
[; ;pic16f886.h: 3241: extern volatile ANSELbits_t ANSELbits @ 0x188;
[; ;pic16f886.h: 3271: extern volatile unsigned char ANSELH @ 0x189;
"3273
[; ;pic16f886.h: 3273: asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
[; ;pic16f886.h: 3276: typedef union {
[; ;pic16f886.h: 3277: struct {
[; ;pic16f886.h: 3278: unsigned ANS8 :1;
[; ;pic16f886.h: 3279: unsigned ANS9 :1;
[; ;pic16f886.h: 3280: unsigned ANS10 :1;
[; ;pic16f886.h: 3281: unsigned ANS11 :1;
[; ;pic16f886.h: 3282: unsigned ANS12 :1;
[; ;pic16f886.h: 3283: unsigned ANS13 :1;
[; ;pic16f886.h: 3284: };
[; ;pic16f886.h: 3285: } ANSELHbits_t;
[; ;pic16f886.h: 3286: extern volatile ANSELHbits_t ANSELHbits @ 0x189;
[; ;pic16f886.h: 3321: extern volatile unsigned char EECON1 @ 0x18C;
"3323
[; ;pic16f886.h: 3323: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16f886.h: 3326: typedef union {
[; ;pic16f886.h: 3327: struct {
[; ;pic16f886.h: 3328: unsigned RD :1;
[; ;pic16f886.h: 3329: unsigned WR :1;
[; ;pic16f886.h: 3330: unsigned WREN :1;
[; ;pic16f886.h: 3331: unsigned WRERR :1;
[; ;pic16f886.h: 3332: unsigned :3;
[; ;pic16f886.h: 3333: unsigned EEPGD :1;
[; ;pic16f886.h: 3334: };
[; ;pic16f886.h: 3335: } EECON1bits_t;
[; ;pic16f886.h: 3336: extern volatile EECON1bits_t EECON1bits @ 0x18C;
[; ;pic16f886.h: 3366: extern volatile unsigned char EECON2 @ 0x18D;
"3368
[; ;pic16f886.h: 3368: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16f886.h: 3378: extern volatile __bit ABDEN @ (((unsigned) &BAUDCTL)*8) + 0;
[; ;pic16f886.h: 3380: extern volatile __bit ABDOVF @ (((unsigned) &BAUDCTL)*8) + 7;
[; ;pic16f886.h: 3382: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f886.h: 3384: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f886.h: 3386: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f886.h: 3388: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f886.h: 3390: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f886.h: 3392: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f886.h: 3394: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f886.h: 3396: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f886.h: 3398: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f886.h: 3400: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f886.h: 3402: extern volatile __bit ANS0 @ (((unsigned) &ANSEL)*8) + 0;
[; ;pic16f886.h: 3404: extern volatile __bit ANS1 @ (((unsigned) &ANSEL)*8) + 1;
[; ;pic16f886.h: 3406: extern volatile __bit ANS10 @ (((unsigned) &ANSELH)*8) + 2;
[; ;pic16f886.h: 3408: extern volatile __bit ANS11 @ (((unsigned) &ANSELH)*8) + 3;
[; ;pic16f886.h: 3410: extern volatile __bit ANS12 @ (((unsigned) &ANSELH)*8) + 4;
[; ;pic16f886.h: 3412: extern volatile __bit ANS13 @ (((unsigned) &ANSELH)*8) + 5;
[; ;pic16f886.h: 3414: extern volatile __bit ANS2 @ (((unsigned) &ANSEL)*8) + 2;
[; ;pic16f886.h: 3416: extern volatile __bit ANS3 @ (((unsigned) &ANSEL)*8) + 3;
[; ;pic16f886.h: 3418: extern volatile __bit ANS4 @ (((unsigned) &ANSEL)*8) + 4;
[; ;pic16f886.h: 3420: extern volatile __bit ANS8 @ (((unsigned) &ANSELH)*8) + 0;
[; ;pic16f886.h: 3422: extern volatile __bit ANS9 @ (((unsigned) &ANSELH)*8) + 1;
[; ;pic16f886.h: 3424: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f886.h: 3426: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f886.h: 3428: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f886.h: 3430: extern volatile __bit BRG0 @ (((unsigned) &SPBRG)*8) + 0;
[; ;pic16f886.h: 3432: extern volatile __bit BRG1 @ (((unsigned) &SPBRG)*8) + 1;
[; ;pic16f886.h: 3434: extern volatile __bit BRG10 @ (((unsigned) &SPBRGH)*8) + 2;
[; ;pic16f886.h: 3436: extern volatile __bit BRG11 @ (((unsigned) &SPBRGH)*8) + 3;
[; ;pic16f886.h: 3438: extern volatile __bit BRG12 @ (((unsigned) &SPBRGH)*8) + 4;
[; ;pic16f886.h: 3440: extern volatile __bit BRG13 @ (((unsigned) &SPBRGH)*8) + 5;
[; ;pic16f886.h: 3442: extern volatile __bit BRG14 @ (((unsigned) &SPBRGH)*8) + 6;
[; ;pic16f886.h: 3444: extern volatile __bit BRG15 @ (((unsigned) &SPBRGH)*8) + 7;
[; ;pic16f886.h: 3446: extern volatile __bit BRG16 @ (((unsigned) &BAUDCTL)*8) + 3;
[; ;pic16f886.h: 3448: extern volatile __bit BRG2 @ (((unsigned) &SPBRG)*8) + 2;
[; ;pic16f886.h: 3450: extern volatile __bit BRG3 @ (((unsigned) &SPBRG)*8) + 3;
[; ;pic16f886.h: 3452: extern volatile __bit BRG4 @ (((unsigned) &SPBRG)*8) + 4;
[; ;pic16f886.h: 3454: extern volatile __bit BRG5 @ (((unsigned) &SPBRG)*8) + 5;
[; ;pic16f886.h: 3456: extern volatile __bit BRG6 @ (((unsigned) &SPBRG)*8) + 6;
[; ;pic16f886.h: 3458: extern volatile __bit BRG7 @ (((unsigned) &SPBRG)*8) + 7;
[; ;pic16f886.h: 3460: extern volatile __bit BRG8 @ (((unsigned) &SPBRGH)*8) + 0;
[; ;pic16f886.h: 3462: extern volatile __bit BRG9 @ (((unsigned) &SPBRGH)*8) + 1;
[; ;pic16f886.h: 3464: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f886.h: 3466: extern volatile __bit C1CH0 @ (((unsigned) &CM1CON0)*8) + 0;
[; ;pic16f886.h: 3468: extern volatile __bit C1CH1 @ (((unsigned) &CM1CON0)*8) + 1;
[; ;pic16f886.h: 3470: extern volatile __bit C1IE @ (((unsigned) &PIE2)*8) + 5;
[; ;pic16f886.h: 3472: extern volatile __bit C1IF @ (((unsigned) &PIR2)*8) + 5;
[; ;pic16f886.h: 3474: extern volatile __bit C1OE @ (((unsigned) &CM1CON0)*8) + 5;
[; ;pic16f886.h: 3476: extern volatile __bit C1ON @ (((unsigned) &CM1CON0)*8) + 7;
[; ;pic16f886.h: 3478: extern volatile __bit C1OUT @ (((unsigned) &CM1CON0)*8) + 6;
[; ;pic16f886.h: 3480: extern volatile __bit C1POL @ (((unsigned) &CM1CON0)*8) + 4;
[; ;pic16f886.h: 3482: extern volatile __bit C1R @ (((unsigned) &CM1CON0)*8) + 2;
[; ;pic16f886.h: 3484: extern volatile __bit C1RSEL @ (((unsigned) &CM2CON1)*8) + 5;
[; ;pic16f886.h: 3486: extern volatile __bit C1SEN @ (((unsigned) &SRCON)*8) + 5;
[; ;pic16f886.h: 3488: extern volatile __bit C2CH0 @ (((unsigned) &CM2CON0)*8) + 0;
[; ;pic16f886.h: 3490: extern volatile __bit C2CH1 @ (((unsigned) &CM2CON0)*8) + 1;
[; ;pic16f886.h: 3492: extern volatile __bit C2IE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f886.h: 3494: extern volatile __bit C2IF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f886.h: 3496: extern volatile __bit C2OE @ (((unsigned) &CM2CON0)*8) + 5;
[; ;pic16f886.h: 3498: extern volatile __bit C2ON @ (((unsigned) &CM2CON0)*8) + 7;
[; ;pic16f886.h: 3500: extern volatile __bit C2OUT @ (((unsigned) &CM2CON0)*8) + 6;
[; ;pic16f886.h: 3502: extern volatile __bit C2POL @ (((unsigned) &CM2CON0)*8) + 4;
[; ;pic16f886.h: 3504: extern volatile __bit C2R @ (((unsigned) &CM2CON0)*8) + 2;
[; ;pic16f886.h: 3506: extern volatile __bit C2REN @ (((unsigned) &SRCON)*8) + 4;
[; ;pic16f886.h: 3508: extern volatile __bit C2RSEL @ (((unsigned) &CM2CON1)*8) + 4;
[; ;pic16f886.h: 3510: extern volatile __bit C2SYNC @ (((unsigned) &CM2CON1)*8) + 0;
[; ;pic16f886.h: 3512: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f886.h: 3514: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f886.h: 3516: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f886.h: 3518: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f886.h: 3520: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f886.h: 3522: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f886.h: 3524: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f886.h: 3526: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f886.h: 3528: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f886.h: 3530: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f886.h: 3532: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f886.h: 3534: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f886.h: 3536: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f886.h: 3538: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f886.h: 3540: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f886.h: 3542: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f886.h: 3544: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f886.h: 3546: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f886.h: 3548: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f886.h: 3550: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f886.h: 3552: extern volatile __bit CHS3 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f886.h: 3554: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f886.h: 3556: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f886.h: 3558: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f886.h: 3560: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f886.h: 3562: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f886.h: 3564: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f886.h: 3566: extern volatile __bit DC1B0 @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f886.h: 3568: extern volatile __bit DC1B1 @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f886.h: 3570: extern volatile __bit DC2B0 @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f886.h: 3572: extern volatile __bit DC2B1 @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f886.h: 3574: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f886.h: 3576: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f886.h: 3578: extern volatile __bit ECCPAS0 @ (((unsigned) &ECCPAS)*8) + 4;
[; ;pic16f886.h: 3580: extern volatile __bit ECCPAS1 @ (((unsigned) &ECCPAS)*8) + 5;
[; ;pic16f886.h: 3582: extern volatile __bit ECCPAS2 @ (((unsigned) &ECCPAS)*8) + 6;
[; ;pic16f886.h: 3584: extern volatile __bit ECCPASE @ (((unsigned) &ECCPAS)*8) + 7;
[; ;pic16f886.h: 3586: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f886.h: 3588: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f886.h: 3590: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f886.h: 3592: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f886.h: 3594: extern volatile __bit FVREN @ (((unsigned) &SRCON)*8) + 0;
[; ;pic16f886.h: 3596: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f886.h: 3598: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f886.h: 3600: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f886.h: 3602: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f886.h: 3604: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f886.h: 3606: extern volatile __bit HTS @ (((unsigned) &OSCCON)*8) + 2;
[; ;pic16f886.h: 3608: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f886.h: 3610: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f886.h: 3612: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f886.h: 3614: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f886.h: 3616: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f886.h: 3618: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f886.h: 3620: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f886.h: 3622: extern volatile __bit IOCB0 @ (((unsigned) &IOCB)*8) + 0;
[; ;pic16f886.h: 3624: extern volatile __bit IOCB1 @ (((unsigned) &IOCB)*8) + 1;
[; ;pic16f886.h: 3626: extern volatile __bit IOCB2 @ (((unsigned) &IOCB)*8) + 2;
[; ;pic16f886.h: 3628: extern volatile __bit IOCB3 @ (((unsigned) &IOCB)*8) + 3;
[; ;pic16f886.h: 3630: extern volatile __bit IOCB4 @ (((unsigned) &IOCB)*8) + 4;
[; ;pic16f886.h: 3632: extern volatile __bit IOCB5 @ (((unsigned) &IOCB)*8) + 5;
[; ;pic16f886.h: 3634: extern volatile __bit IOCB6 @ (((unsigned) &IOCB)*8) + 6;
[; ;pic16f886.h: 3636: extern volatile __bit IOCB7 @ (((unsigned) &IOCB)*8) + 7;
[; ;pic16f886.h: 3638: extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 4;
[; ;pic16f886.h: 3640: extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 5;
[; ;pic16f886.h: 3642: extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 6;
[; ;pic16f886.h: 3644: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f886.h: 3646: extern volatile __bit LTS @ (((unsigned) &OSCCON)*8) + 1;
[; ;pic16f886.h: 3648: extern volatile __bit MC1OUT @ (((unsigned) &CM2CON1)*8) + 7;
[; ;pic16f886.h: 3650: extern volatile __bit MC2OUT @ (((unsigned) &CM2CON1)*8) + 6;
[; ;pic16f886.h: 3652: extern volatile __bit MSK0 @ (((unsigned) &SSPMSK)*8) + 0;
[; ;pic16f886.h: 3654: extern volatile __bit MSK1 @ (((unsigned) &SSPMSK)*8) + 1;
[; ;pic16f886.h: 3656: extern volatile __bit MSK2 @ (((unsigned) &SSPMSK)*8) + 2;
[; ;pic16f886.h: 3658: extern volatile __bit MSK3 @ (((unsigned) &SSPMSK)*8) + 3;
[; ;pic16f886.h: 3660: extern volatile __bit MSK4 @ (((unsigned) &SSPMSK)*8) + 4;
[; ;pic16f886.h: 3662: extern volatile __bit MSK5 @ (((unsigned) &SSPMSK)*8) + 5;
[; ;pic16f886.h: 3664: extern volatile __bit MSK6 @ (((unsigned) &SSPMSK)*8) + 6;
[; ;pic16f886.h: 3666: extern volatile __bit MSK7 @ (((unsigned) &SSPMSK)*8) + 7;
[; ;pic16f886.h: 3668: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f886.h: 3670: extern volatile __bit OSFIE @ (((unsigned) &PIE2)*8) + 7;
[; ;pic16f886.h: 3672: extern volatile __bit OSFIF @ (((unsigned) &PIR2)*8) + 7;
[; ;pic16f886.h: 3674: extern volatile __bit OSTS @ (((unsigned) &OSCCON)*8) + 3;
[; ;pic16f886.h: 3676: extern volatile __bit P1M0 @ (((unsigned) &CCP1CON)*8) + 6;
[; ;pic16f886.h: 3678: extern volatile __bit P1M1 @ (((unsigned) &CCP1CON)*8) + 7;
[; ;pic16f886.h: 3680: extern volatile __bit PDC0 @ (((unsigned) &PWM1CON)*8) + 0;
[; ;pic16f886.h: 3682: extern volatile __bit PDC1 @ (((unsigned) &PWM1CON)*8) + 1;
[; ;pic16f886.h: 3684: extern volatile __bit PDC2 @ (((unsigned) &PWM1CON)*8) + 2;
[; ;pic16f886.h: 3686: extern volatile __bit PDC3 @ (((unsigned) &PWM1CON)*8) + 3;
[; ;pic16f886.h: 3688: extern volatile __bit PDC4 @ (((unsigned) &PWM1CON)*8) + 4;
[; ;pic16f886.h: 3690: extern volatile __bit PDC5 @ (((unsigned) &PWM1CON)*8) + 5;
[; ;pic16f886.h: 3692: extern volatile __bit PDC6 @ (((unsigned) &PWM1CON)*8) + 6;
[; ;pic16f886.h: 3694: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f886.h: 3696: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f886.h: 3698: extern volatile __bit PRSEN @ (((unsigned) &PWM1CON)*8) + 7;
[; ;pic16f886.h: 3700: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f886.h: 3702: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f886.h: 3704: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f886.h: 3706: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f886.h: 3708: extern volatile __bit PSSAC0 @ (((unsigned) &ECCPAS)*8) + 2;
[; ;pic16f886.h: 3710: extern volatile __bit PSSAC1 @ (((unsigned) &ECCPAS)*8) + 3;
[; ;pic16f886.h: 3712: extern volatile __bit PSSBD0 @ (((unsigned) &ECCPAS)*8) + 0;
[; ;pic16f886.h: 3714: extern volatile __bit PSSBD1 @ (((unsigned) &ECCPAS)*8) + 1;
[; ;pic16f886.h: 3716: extern volatile __bit PULSR @ (((unsigned) &SRCON)*8) + 2;
[; ;pic16f886.h: 3718: extern volatile __bit PULSS @ (((unsigned) &SRCON)*8) + 3;
[; ;pic16f886.h: 3720: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f886.h: 3722: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f886.h: 3724: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f886.h: 3726: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f886.h: 3728: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f886.h: 3730: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f886.h: 3732: extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic16f886.h: 3734: extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic16f886.h: 3736: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f886.h: 3738: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f886.h: 3740: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f886.h: 3742: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f886.h: 3744: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f886.h: 3746: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f886.h: 3748: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f886.h: 3750: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f886.h: 3752: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f886.h: 3754: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f886.h: 3756: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f886.h: 3758: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f886.h: 3760: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f886.h: 3762: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f886.h: 3764: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f886.h: 3766: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f886.h: 3768: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f886.h: 3770: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f886.h: 3772: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f886.h: 3774: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f886.h: 3776: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f886.h: 3778: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f886.h: 3780: extern volatile __bit RCIDL @ (((unsigned) &BAUDCTL)*8) + 6;
[; ;pic16f886.h: 3782: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f886.h: 3784: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f886.h: 3786: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f886.h: 3788: extern volatile __bit RE3 @ (((unsigned) &PORTE)*8) + 3;
[; ;pic16f886.h: 3790: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f886.h: 3792: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f886.h: 3794: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f886.h: 3796: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f886.h: 3798: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f886.h: 3800: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f886.h: 3802: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f886.h: 3804: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f886.h: 3806: extern volatile __bit SBOREN @ (((unsigned) &PCON)*8) + 4;
[; ;pic16f886.h: 3808: extern volatile __bit SCKP @ (((unsigned) &BAUDCTL)*8) + 4;
[; ;pic16f886.h: 3810: extern volatile __bit SCS @ (((unsigned) &OSCCON)*8) + 0;
[; ;pic16f886.h: 3812: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f886.h: 3814: extern volatile __bit SENDB @ (((unsigned) &TXSTA)*8) + 3;
[; ;pic16f886.h: 3816: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f886.h: 3818: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f886.h: 3820: extern volatile __bit SR0 @ (((unsigned) &SRCON)*8) + 6;
[; ;pic16f886.h: 3822: extern volatile __bit SR1 @ (((unsigned) &SRCON)*8) + 7;
[; ;pic16f886.h: 3824: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f886.h: 3826: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f886.h: 3828: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f886.h: 3830: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f886.h: 3832: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f886.h: 3834: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f886.h: 3836: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f886.h: 3838: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f886.h: 3840: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f886.h: 3842: extern volatile __bit STRA @ (((unsigned) &PSTRCON)*8) + 0;
[; ;pic16f886.h: 3844: extern volatile __bit STRB @ (((unsigned) &PSTRCON)*8) + 1;
[; ;pic16f886.h: 3846: extern volatile __bit STRC @ (((unsigned) &PSTRCON)*8) + 2;
[; ;pic16f886.h: 3848: extern volatile __bit STRD @ (((unsigned) &PSTRCON)*8) + 3;
[; ;pic16f886.h: 3850: extern volatile __bit STRSYNC @ (((unsigned) &PSTRCON)*8) + 4;
[; ;pic16f886.h: 3852: extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;
[; ;pic16f886.h: 3854: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f886.h: 3856: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f886.h: 3858: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f886.h: 3860: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f886.h: 3862: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f886.h: 3864: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f886.h: 3866: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f886.h: 3868: extern volatile __bit T1GINV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f886.h: 3870: extern volatile __bit T1GIV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f886.h: 3872: extern volatile __bit T1GSS @ (((unsigned) &CM2CON1)*8) + 1;
[; ;pic16f886.h: 3874: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f886.h: 3876: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f886.h: 3878: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f886.h: 3880: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f886.h: 3882: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f886.h: 3884: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f886.h: 3886: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f886.h: 3888: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f886.h: 3890: extern volatile __bit TMR1GE @ (((unsigned) &T1CON)*8) + 6;
[; ;pic16f886.h: 3892: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f886.h: 3894: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f886.h: 3896: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f886.h: 3898: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f886.h: 3900: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f886.h: 3902: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f886.h: 3904: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f886.h: 3906: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f886.h: 3908: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f886.h: 3910: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f886.h: 3912: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f886.h: 3914: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f886.h: 3916: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f886.h: 3918: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f886.h: 3920: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f886.h: 3922: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f886.h: 3924: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;pic16f886.h: 3926: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;pic16f886.h: 3928: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f886.h: 3930: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f886.h: 3932: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f886.h: 3934: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f886.h: 3936: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f886.h: 3938: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f886.h: 3940: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f886.h: 3942: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f886.h: 3944: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f886.h: 3946: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f886.h: 3948: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f886.h: 3950: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f886.h: 3952: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f886.h: 3954: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f886.h: 3956: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f886.h: 3958: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f886.h: 3960: extern volatile __bit TRISE3 @ (((unsigned) &TRISE)*8) + 3;
[; ;pic16f886.h: 3962: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f886.h: 3964: extern volatile __bit TUN0 @ (((unsigned) &OSCTUNE)*8) + 0;
[; ;pic16f886.h: 3966: extern volatile __bit TUN1 @ (((unsigned) &OSCTUNE)*8) + 1;
[; ;pic16f886.h: 3968: extern volatile __bit TUN2 @ (((unsigned) &OSCTUNE)*8) + 2;
[; ;pic16f886.h: 3970: extern volatile __bit TUN3 @ (((unsigned) &OSCTUNE)*8) + 3;
[; ;pic16f886.h: 3972: extern volatile __bit TUN4 @ (((unsigned) &OSCTUNE)*8) + 4;
[; ;pic16f886.h: 3974: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f886.h: 3976: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f886.h: 3978: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f886.h: 3980: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f886.h: 3982: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f886.h: 3984: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f886.h: 3986: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f886.h: 3988: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f886.h: 3990: extern volatile __bit ULPWUE @ (((unsigned) &PCON)*8) + 5;
[; ;pic16f886.h: 3992: extern volatile __bit ULPWUIE @ (((unsigned) &PIE2)*8) + 2;
[; ;pic16f886.h: 3994: extern volatile __bit ULPWUIF @ (((unsigned) &PIR2)*8) + 2;
[; ;pic16f886.h: 3996: extern volatile __bit VCFG0 @ (((unsigned) &ADCON1)*8) + 4;
[; ;pic16f886.h: 3998: extern volatile __bit VCFG1 @ (((unsigned) &ADCON1)*8) + 5;
[; ;pic16f886.h: 4000: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic16f886.h: 4002: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic16f886.h: 4004: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic16f886.h: 4006: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic16f886.h: 4008: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic16f886.h: 4010: extern volatile __bit VROE @ (((unsigned) &VRCON)*8) + 6;
[; ;pic16f886.h: 4012: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic16f886.h: 4014: extern volatile __bit VRSS @ (((unsigned) &VRCON)*8) + 4;
[; ;pic16f886.h: 4016: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f886.h: 4018: extern volatile __bit WDTPS0 @ (((unsigned) &WDTCON)*8) + 1;
[; ;pic16f886.h: 4020: extern volatile __bit WDTPS1 @ (((unsigned) &WDTCON)*8) + 2;
[; ;pic16f886.h: 4022: extern volatile __bit WDTPS2 @ (((unsigned) &WDTCON)*8) + 3;
[; ;pic16f886.h: 4024: extern volatile __bit WDTPS3 @ (((unsigned) &WDTCON)*8) + 4;
[; ;pic16f886.h: 4026: extern volatile __bit WPUB0 @ (((unsigned) &WPUB)*8) + 0;
[; ;pic16f886.h: 4028: extern volatile __bit WPUB1 @ (((unsigned) &WPUB)*8) + 1;
[; ;pic16f886.h: 4030: extern volatile __bit WPUB2 @ (((unsigned) &WPUB)*8) + 2;
[; ;pic16f886.h: 4032: extern volatile __bit WPUB3 @ (((unsigned) &WPUB)*8) + 3;
[; ;pic16f886.h: 4034: extern volatile __bit WPUB4 @ (((unsigned) &WPUB)*8) + 4;
[; ;pic16f886.h: 4036: extern volatile __bit WPUB5 @ (((unsigned) &WPUB)*8) + 5;
[; ;pic16f886.h: 4038: extern volatile __bit WPUB6 @ (((unsigned) &WPUB)*8) + 6;
[; ;pic16f886.h: 4040: extern volatile __bit WPUB7 @ (((unsigned) &WPUB)*8) + 7;
[; ;pic16f886.h: 4042: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f886.h: 4044: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f886.h: 4046: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f886.h: 4048: extern volatile __bit WUE @ (((unsigned) &BAUDCTL)*8) + 1;
[; ;pic16f886.h: 4050: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f886.h: 4052: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f886.h: 4054: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f886.h: 4056: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f886.h: 4058: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f886.h: 4060: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f886.h: 4062: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f886.h: 4064: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f886.h: 4066: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f886.h: 4068: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f886.h: 4070: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f886.h: 4072: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f886.h: 4074: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f886.h: 4076: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f886.h: 4078: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 29: extern void __nop(void);
[; ;pic.h: 78: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 153: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 155: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 193: extern __bank0 unsigned char __resetbits;
[; ;pic.h: 194: extern __bank0 __bit __powerdown;
[; ;pic.h: 195: extern __bank0 __bit __timeout;
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;string.h: 14: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 15: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 16: extern void * memset(void *, int, size_t);
[; ;string.h: 36: extern char * strcat(char *, const char *);
[; ;string.h: 37: extern char * strcpy(char *, const char *);
[; ;string.h: 38: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 39: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 40: extern char * strdup(const char *);
[; ;string.h: 41: extern char * strtok(char *, const char *);
[; ;string.h: 44: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 45: extern int strcmp(const char *, const char *);
[; ;string.h: 46: extern int stricmp(const char *, const char *);
[; ;string.h: 47: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 48: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 49: extern void * memchr(const void *, int, size_t);
[; ;string.h: 50: extern size_t strcspn(const char *, const char *);
[; ;string.h: 51: extern char * strpbrk(const char *, const char *);
[; ;string.h: 52: extern size_t strspn(const char *, const char *);
[; ;string.h: 53: extern char * strstr(const char *, const char *);
[; ;string.h: 54: extern char * stristr(const char *, const char *);
[; ;string.h: 55: extern char * strerror(int);
[; ;string.h: 56: extern size_t strlen(const char *);
[; ;string.h: 57: extern char * strchr(const char *, int);
[; ;string.h: 58: extern char * strichr(const char *, int);
[; ;string.h: 59: extern char * strrchr(const char *, int);
[; ;string.h: 60: extern char * strrichr(const char *, int);
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 53: extern double atof(const char *);
[; ;stdlib.h: 54: extern double strtod(const char *, const char **);
[; ;stdlib.h: 55: extern int atoi(const char *);
[; ;stdlib.h: 56: extern unsigned xtoi(const char *);
[; ;stdlib.h: 57: extern long atol(const char *);
[; ;stdlib.h: 58: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 60: extern int rand(void);
[; ;stdlib.h: 61: extern void srand(unsigned int);
[; ;stdlib.h: 62: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 63: extern div_t div(int numer, int denom);
[; ;stdlib.h: 64: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 65: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 66: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 67: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 68: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 69: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 70: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 75: extern void * malloc(size_t);
[; ;stdlib.h: 76: extern void free(void *);
[; ;stdlib.h: 77: extern void * realloc(void *, size_t);
[; ;stdlib.h: 86: extern int atexit(void (*)(void));
[; ;stdlib.h: 87: extern char * getenv(const char *);
[; ;stdlib.h: 88: extern char ** environ;
[; ;stdlib.h: 89: extern int system(char *);
[; ;stdlib.h: 90: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 91: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 92: extern int abs(int);
[; ;stdlib.h: 93: extern long labs(long);
[; ;stdlib.h: 95: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 96: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 101: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 102: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 104: extern char * ftoa(float f, int * status);
[; ;ctype.h: 4: extern __bit isalpha(char);
[; ;ctype.h: 5: extern __bit isupper(char);
[; ;ctype.h: 6: extern __bit islower(char);
[; ;ctype.h: 7: extern __bit isdigit(char);
[; ;ctype.h: 8: extern __bit isxdigit(char);
[; ;ctype.h: 9: extern __bit isspace(char);
[; ;ctype.h: 10: extern __bit ispunct(char);
[; ;ctype.h: 11: extern __bit isalnum(char);
[; ;ctype.h: 12: extern __bit isprint(char);
[; ;ctype.h: 13: extern __bit isgraph(char);
[; ;ctype.h: 14: extern __bit iscntrl(char);
[; ;ctype.h: 17: extern char toupper(char);
[; ;ctype.h: 18: extern char tolower(char);
"2 config.h
[p x FOSC=INTRC_NOCLKOUT ]
"3
[p x WDTE=OFF ]
"4
[p x PWRTE=OFF ]
"5
[p x MCLRE=OFF ]
"6
[p x CP=OFF ]
"7
[p x CPD=OFF ]
"8
[p x BOREN=ON ]
"9
[p x IESO=ON ]
"10
[p x FCMEN=ON ]
"11
[p x LVP=OFF ]
"14
[p x BOR4V=BOR40V ]
"15
[p x WRT=OFF ]
"76 main.c
[v _character `uc ~T0 @X0 1 e ]
[i _character
-> -> 95 `ui `uc
]
[; ;main.c: 76: char character = '_';
[; ;main.c: 77: enum not_number_buttons {DEFAULT, NO_PRESS, A, A_LONG, B, C, D, HASH, STAR};
"78
[v _button_pressed `E1851 ~T0 @X0 1 e ]
[i _button_pressed
. `E1851 1
]
[; ;main.c: 78: enum not_number_buttons button_pressed = NO_PRESS;
"80
[v _display_flag `uc ~T0 @X0 1 e ]
[i _display_flag
-> -> 0 `i `uc
]
[; ;main.c: 80: unsigned char display_flag = 0;
"81
[v _pressed_time `ui ~T0 @X0 1 e ]
[; ;main.c: 81: unsigned int pressed_time;
"82
[v _cursor `uc ~T0 @X0 1 e ]
[i _cursor
-> -> 0 `i `uc
]
[; ;main.c: 82: char cursor = 0;
"83
[v _speed `i ~T0 @X0 1 e ]
[i _speed
-> 600 `i
]
[; ;main.c: 83: int speed = 600;
"84
[v _index `ui ~T0 @X0 1 e ]
[i _index
-> -> 0 `i `ui
]
[; ;main.c: 84: unsigned int index = 0;
"91
[v _CHAR_DATA `Cui ~T0 @X0 -> 0 `x e ]
[i _CHAR_DATA
:U ..
-> 65535 `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
"93
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> 65343 `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
"95
-> -> 246 `i `ui
-> 53239 `ui
-> -> 4415 `i `ui
-> -> 959 `i `ui
-> 52799 `ui
"97
-> -> 8767 `i `ui
-> -> 8255 `i `ui
-> -> 16182 `i `ui
-> -> 63 `i `ui
-> -> 575 `i `ui
"99
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> 65502 `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 3135 `i `ui
"101
-> -> 941 `i `ui
-> -> 12543 `i `ui
-> -> 1005 `i `ui
-> -> 12415 `i `ui
-> -> 15487 `i `ui
-> -> 8383 `i `ui
"103
-> 52287 `ui
-> -> 13293 `i `ui
-> 49663 `ui
-> 64627 `ui
-> 61695 `ui
-> 52439 `ui
"105
-> 52443 `ui
-> -> 255 `i `ui
-> -> 7231 `i `ui
-> -> 251 `i `ui
-> -> 7227 `i `ui
-> -> 8767 `i `ui
"107
-> -> 16365 `i `ui
-> 49407 `ui
-> 64758 `ui
-> 52474 `ui
-> 65490 `ui
-> 65493 `ui
"109
-> -> 13302 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
-> 62463 `ui
..
]
[; ;main.c: 91: const unsigned int CHAR_DATA[] = {0xFFFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
[; ;main.c: 93: 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF3F, 0x00, 0x00,
[; ;main.c: 95: 0xF6, 0xCFF7, 0x113F, 0x3BF, 0xCE3F,
[; ;main.c: 97: 0x223F, 0x203F, 0x3F36, 0x3F, 0x23F,
[; ;main.c: 99: 0x00, 0x00, 0x00, 0x00, 0xFFDE, 0x00, 0x00, 0xC3F,
[; ;main.c: 101: 0x3AD, 0x30FF, 0x3ED, 0x307F, 0x3C7F, 0x20BF,
[; ;main.c: 103: 0xCC3F, 0x33ED, 0xC1FF, 0xFC73, 0xF0FF, 0xCCD7,
[; ;main.c: 105: 0xCCDB, 0xFF, 0x1C3F, 0xFB, 0x1C3B, 0x223F,
[; ;main.c: 107: 0x3FED, 0xC0FF, 0xFCF6, 0xCCFA, 0xFFD2, 0xFFD5,
[; ;main.c: 109: 0x33F6, 0x00, 0x00, 0x00, 0x00, 0xF3FF};
"111
[v _greeting_message `uc ~T0 @X0 -> 35 `i e ]
[i _greeting_message
:U ..
-> 65 `c
-> 45 `c
-> 45 `c
-> 87 `c
-> 82 `c
-> 73 `c
-> 84 `c
-> 69 `c
-> 32 `c
-> 66 `c
-> 45 `c
-> 45 `c
-> 83 `c
-> 72 `c
-> 79 `c
-> 87 `c
-> 32 `c
-> 67 `c
-> 45 `c
-> 45 `c
-> 83 `c
-> 84 `c
-> 79 `c
-> 82 `c
-> 69 `c
-> 32 `c
-> 68 `c
-> 45 `c
-> 45 `c
-> 69 `c
-> 88 `c
-> 73 `c
-> 84 `c
-> 32 `c
-> 0 `c
..
]
[; ;main.c: 111: char greeting_message[35] = "A--WRITE B--SHOW C--STORE D--EXIT ";
"112
[v _message `uc ~T0 @X0 -> 80 `i e ]
[i _message
:U ..
-> 32 `c
-> 0 `c
..
]
[; ;main.c: 112: char message[80] = " ";
"117
[v _buffer `uc ~T0 @X0 -> 0 `x e ]
[i _buffer
:U ..
-> -> 32 `ui `uc
-> -> 32 `ui `uc
-> -> 32 `ui `uc
-> -> 32 `ui `uc
-> -> 32 `ui `uc
-> -> 32 `ui `uc
-> -> 0 `ui `uc
..
]
[; ;main.c: 117: char buffer[] = {' ', ' ', ' ', ' ', ' ', ' ', '\0'};
"122
[v _rTrim `(v ~T0 @X0 1 ef1`*uc ]
"123
{
[; ;main.c: 122: void rTrim(char * str)
[; ;main.c: 123: {
[e :U _rTrim ]
"122
[v _str `*uc ~T0 @X0 1 r1 ]
"123
[f ]
[v _index `i ~T0 @X0 1 a ]
"124
[v _i `i ~T0 @X0 1 a ]
[; ;main.c: 124: int index, i;
[; ;main.c: 127: i = 0;
"127
[e = _i -> 0 `i ]
[; ;main.c: 128: while(str[i] != '\0')
"128
[e $U 140  ]
[e :U 141 ]
[; ;main.c: 129: {
"129
{
[; ;main.c: 130: if(str[i] != ' ' && str[i] != '\t' && str[i] != '\n')
"130
[e $ ! && && != -> *U + _str * -> _i `x -> -> # *U _str `i `x `ui -> 32 `ui != -> *U + _str * -> _i `x -> -> # *U _str `i `x `ui -> 9 `ui != -> *U + _str * -> _i `x -> -> # *U _str `i `x `ui -> 10 `ui 143  ]
[; ;main.c: 131: {
"131
{
[; ;main.c: 132: index = i;
"132
[e = _index _i ]
"133
}
[e :U 143 ]
[; ;main.c: 133: }
[; ;main.c: 135: i++;
"135
[e ++ _i -> 1 `i ]
"136
}
[e :U 140 ]
"128
[e $ != -> *U + _str * -> _i `x -> -> # *U _str `i `x `ui -> 0 `ui 141  ]
[e :U 142 ]
[; ;main.c: 136: }
[; ;main.c: 142: str[index + 1] = '\0';
"142
[e = *U + _str * -> + _index -> 1 `i `x -> -> # *U _str `i `x -> -> 0 `ui `uc ]
[; ;main.c: 144: }
"144
[e :UE 139 ]
}
"146
[v _clear `(v ~T0 @X0 1 ef ]
"147
{
[; ;main.c: 146: void clear()
[; ;main.c: 147: {
[e :U _clear ]
[f ]
"148
[v _m `i ~T0 @X0 1 a ]
"149
[v _n `i ~T0 @X0 1 a ]
"150
[v _message_length `s ~T0 @X0 1 a ]
[; ;main.c: 148: int m;
[; ;main.c: 149: int n;
[; ;main.c: 150: short message_length;
[; ;main.c: 151: button_pressed = DEFAULT;
"151
[e = _button_pressed . `E1851 0 ]
[; ;main.c: 152: message_length = strlen(message);
"152
[e = _message_length -> ( _strlen (1 -> &U _message `*Cuc `s ]
[; ;main.c: 153: cursor = 0;
"153
[e = _cursor -> -> 0 `i `uc ]
[; ;main.c: 155: for (m = 0; m <= 5; m++)
"155
{
[e = _m -> 0 `i ]
[e $ <= _m -> 5 `i 145  ]
[e $U 146  ]
"156
[e :U 145 ]
[; ;main.c: 156: {
{
[; ;main.c: 157: buffer[m] = ' ';
"157
[e = *U + &U _buffer * -> -> _m `ui `ux -> -> # *U &U _buffer `ui `ux -> -> 32 `ui `uc ]
"158
}
"155
[e ++ _m -> 1 `i ]
[e $ <= _m -> 5 `i 145  ]
[e :U 146 ]
"158
}
[; ;main.c: 158: }
[; ;main.c: 159: for (n = 0; n <= message_length; n++)
"159
{
[e = _n -> 0 `i ]
[e $U 151  ]
"160
[e :U 148 ]
[; ;main.c: 160: {
{
[; ;main.c: 161: message[n] = ' ';
"161
[e = *U + &U _message * -> -> _n `ui `ux -> -> # *U &U _message `ui `ux -> -> 32 `ui `uc ]
"162
}
"159
[e ++ _n -> 1 `i ]
[e :U 151 ]
[e $ <= _n -> _message_length `i 148  ]
[e :U 149 ]
"162
}
[; ;main.c: 162: }
[; ;main.c: 164: character = '_';
"164
[e = _character -> -> 95 `ui `uc ]
[; ;main.c: 165: }
"165
[e :UE 144 ]
}
"167
[v _init `(v ~T0 @X0 1 ef ]
"168
{
[; ;main.c: 167: void init()
[; ;main.c: 168: {
[e :U _init ]
[f ]
[; ;main.c: 169: ANSEL = 0x00;
"169
[e = _ANSEL -> -> 0 `i `uc ]
[; ;main.c: 170: ANSELH = 0x00;
"170
[e = _ANSELH -> -> 0 `i `uc ]
[; ;main.c: 171: TRISA = 0;
"171
[e = _TRISA -> -> 0 `i `uc ]
[; ;main.c: 172: TRISC = 0;
"172
[e = _TRISC -> -> 0 `i `uc ]
[; ;main.c: 173: PORTA = 0;
"173
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 174: TRISB = 0b11110000;
"174
[e = _TRISB -> -> 240 `i `uc ]
[; ;main.c: 178: PORTAbits.RA0 = 1;
"178
[e = . . _PORTAbits 0 0 -> -> 1 `i `uc ]
[; ;main.c: 179: PORTAbits.RA1 = 1;
"179
[e = . . _PORTAbits 0 1 -> -> 1 `i `uc ]
[; ;main.c: 180: PORTAbits.RA2 = 1;
"180
[e = . . _PORTAbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 181: PORTAbits.RA3 = 1;
"181
[e = . . _PORTAbits 0 3 -> -> 1 `i `uc ]
[; ;main.c: 182: PORTAbits.RA4 = 1;
"182
[e = . . _PORTAbits 0 4 -> -> 1 `i `uc ]
[; ;main.c: 183: PORTAbits.RA5 = 1;
"183
[e = . . _PORTAbits 0 5 -> -> 1 `i `uc ]
[; ;main.c: 184: PORTAbits.RA6 = 0;
"184
[e = . . _PORTAbits 0 6 -> -> 0 `i `uc ]
[; ;main.c: 186: T2CON = 0b00000000;
"186
[e = _T2CON -> -> 0 `i `uc ]
[; ;main.c: 187: TMR2 = 0;
"187
[e = _TMR2 -> -> 0 `i `uc ]
[; ;main.c: 188: PR2 = 250;
"188
[e = _PR2 -> -> 250 `i `uc ]
[; ;main.c: 189: PIR1bits.TMR2IF = 0;
"189
[e = . . _PIR1bits 0 1 -> -> 0 `i `uc ]
[; ;main.c: 194: TMR0 = 100;
"194
[e = _TMR0 -> -> 100 `i `uc ]
[; ;main.c: 196: OPTION_REG = 0b00000011;
"196
[e = _OPTION_REG -> -> 3 `i `uc ]
[; ;main.c: 198: PORTB = 0xF0;
"198
[e = _PORTB -> -> 240 `i `uc ]
[; ;main.c: 203: INTCONbits.RBIF = 0;
"203
[e = . . _INTCONbits 0 0 -> -> 0 `i `uc ]
[; ;main.c: 204: INTCONbits.T0IE = 1;
"204
[e = . . _INTCONbits 0 5 -> -> 1 `i `uc ]
[; ;main.c: 205: INTCONbits.RBIE = 1;
"205
[e = . . _INTCONbits 0 3 -> -> 1 `i `uc ]
[; ;main.c: 206: INTCONbits.GIE = 1;
"206
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
[; ;main.c: 207: IOCB = 0b11111111;
"207
[e = _IOCB -> -> 255 `i `uc ]
[; ;main.c: 208: WPUB = 0b11110000;
"208
[e = _WPUB -> -> 240 `i `uc ]
[; ;main.c: 209: PORTCbits.RC1 = 0;
"209
[e = . . _PORTCbits 0 1 -> -> 0 `i `uc ]
[; ;main.c: 210: PORTCbits.RC2 = 0;
"210
[e = . . _PORTCbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 211: PORTCbits.RC0 = 0;
"211
[e = . . _PORTCbits 0 0 -> -> 0 `i `uc ]
[; ;main.c: 212: }
"212
[e :UE 152 ]
}
"214
[v _delay `(v ~T0 @X0 1 ef ]
"215
{
[; ;main.c: 214: void delay()
[; ;main.c: 215: {
[e :U _delay ]
[f ]
[; ;main.c: 216: for (int i = 0; i < speed; i++)
"216
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $U 157  ]
"217
[e :U 154 ]
[; ;main.c: 217: {
{
[; ;main.c: 218: _delay((unsigned long)((100)*(8000000/4000000.0)));
"218
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
"219
}
"216
[e ++ _i -> 1 `i ]
[e :U 157 ]
[e $ < _i _speed 154  ]
[e :U 155 ]
"219
}
[; ;main.c: 219: }
[; ;main.c: 220: }
"220
[e :UE 153 ]
}
"222
[v _save_in_eeprom `(v ~T0 @X0 1 ef ]
"223
{
[; ;main.c: 222: void save_in_eeprom()
[; ;main.c: 223: {
[e :U _save_in_eeprom ]
[f ]
"224
[v _j `i ~T0 @X0 1 a ]
"225
[v _temp `uc ~T0 @X0 1 a ]
"226
[v _message_length `uc ~T0 @X0 1 a ]
[; ;main.c: 224: int j;
[; ;main.c: 225: char temp;
[; ;main.c: 226: char message_length;
[; ;main.c: 227: message_length = strlen(message);
"227
[e = _message_length -> ( _strlen (1 -> &U _message `*Cuc `uc ]
[; ;main.c: 228: eeprom_write(0, message_length);
"228
[e ( _eeprom_write (2 , -> -> 0 `i `uc _message_length ]
[; ;main.c: 229: for (j = 1; j <= message_length; j++)
"229
{
[e = _j -> 1 `i ]
[e $U 162  ]
"230
[e :U 159 ]
[; ;main.c: 230: {
{
[; ;main.c: 231: temp = message[j - 1];
"231
[e = _temp *U + &U _message * -> -> - _j -> 1 `i `ui `ux -> -> # *U &U _message `ui `ux ]
[; ;main.c: 232: eeprom_write(j, temp);
"232
[e ( _eeprom_write (2 , -> _j `uc _temp ]
[; ;main.c: 233: _delay((unsigned long)((1)*(8000000/4000.0)));
"233
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"234
}
"229
[e ++ _j -> 1 `i ]
[e :U 162 ]
[e $ <= _j -> _message_length `i 159  ]
[e :U 160 ]
"234
}
[; ;main.c: 234: }
[; ;main.c: 235: _delay((unsigned long)((20)*(8000000/4000.0)));
"235
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 236: cursor = 7;
"236
[e = _cursor -> -> 7 `i `uc ]
[; ;main.c: 237: buffer[0] = 'S';
"237
[e = *U + &U _buffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _buffer `ui `ux -> -> 83 `ui `uc ]
[; ;main.c: 238: buffer[1] = 'T';
"238
[e = *U + &U _buffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _buffer `ui `ux -> -> 84 `ui `uc ]
[; ;main.c: 239: buffer[2] = 'O';
"239
[e = *U + &U _buffer * -> -> -> 2 `i `ui `ux -> -> # *U &U _buffer `ui `ux -> -> 79 `ui `uc ]
[; ;main.c: 240: buffer[3] = 'R';
"240
[e = *U + &U _buffer * -> -> -> 3 `i `ui `ux -> -> # *U &U _buffer `ui `ux -> -> 82 `ui `uc ]
[; ;main.c: 241: buffer[4] = 'E';
"241
[e = *U + &U _buffer * -> -> -> 4 `i `ui `ux -> -> # *U &U _buffer `ui `ux -> -> 69 `ui `uc ]
[; ;main.c: 242: buffer[5] = 'D';
"242
[e = *U + &U _buffer * -> -> -> 5 `i `ui `ux -> -> # *U &U _buffer `ui `ux -> -> 68 `ui `uc ]
[; ;main.c: 243: delay();
"243
[e ( _delay ..  ]
[; ;main.c: 244: delay();
"244
[e ( _delay ..  ]
[; ;main.c: 245: delay();
"245
[e ( _delay ..  ]
[; ;main.c: 246: delay();
"246
[e ( _delay ..  ]
[; ;main.c: 247: delay();
"247
[e ( _delay ..  ]
[; ;main.c: 248: clear();
"248
[e ( _clear ..  ]
[; ;main.c: 249: }
"249
[e :UE 158 ]
}
"251
[v _read_eeprom `(v ~T0 @X0 1 ef ]
"252
{
[; ;main.c: 251: void read_eeprom()
[; ;main.c: 252: {
[e :U _read_eeprom ]
[f ]
"253
[v _j `i ~T0 @X0 1 a ]
"254
[v _temp `uc ~T0 @X0 1 a ]
"255
[v _message_length `uc ~T0 @X0 1 a ]
[; ;main.c: 253: int j;
[; ;main.c: 254: char temp;
[; ;main.c: 255: char message_length;
[; ;main.c: 256: message_length = eeprom_read(0);
"256
[e = _message_length ( _eeprom_read (1 -> -> 0 `i `uc ]
[; ;main.c: 257: for (j = 1; j <= message_length; j++)
"257
{
[e = _j -> 1 `i ]
[e $U 167  ]
"258
[e :U 164 ]
[; ;main.c: 258: {
{
[; ;main.c: 259: temp = eeprom_read(j);
"259
[e = _temp ( _eeprom_read (1 -> _j `uc ]
[; ;main.c: 260: message[j - 1] = temp;
"260
[e = *U + &U _message * -> -> - _j -> 1 `i `ui `ux -> -> # *U &U _message `ui `ux _temp ]
"261
}
"257
[e ++ _j -> 1 `i ]
[e :U 167 ]
[e $ <= _j -> _message_length `i 164  ]
[e :U 165 ]
"261
}
[; ;main.c: 261: }
[; ;main.c: 263: }
"263
[e :UE 163 ]
}
"265
[v _left_rotate_by_one `(v ~T0 @X0 1 ef2`*uc`i ]
"266
{
[; ;main.c: 265: void left_rotate_by_one(char arr[], int n)
[; ;main.c: 266: {
[e :U _left_rotate_by_one ]
"265
[v _arr `*uc ~T0 @X0 1 r1 ]
[v _n `i ~T0 @X0 1 r2 ]
"266
[f ]
"267
[v _j `i ~T0 @X0 1 a ]
[v _temp `i ~T0 @X0 1 a ]
[; ;main.c: 267: int j, temp;
[; ;main.c: 268: temp = arr[0];
"268
[e = _temp -> *U + _arr * -> -> 0 `i `x -> -> # *U _arr `i `x `i ]
[; ;main.c: 269: for (j = 0; j < n - 1; j++)
"269
{
[e = _j -> 0 `i ]
[e $U 172  ]
"270
[e :U 169 ]
[; ;main.c: 270: arr[j] = arr[j + 1];
[e = *U + _arr * -> _j `x -> -> # *U _arr `i `x *U + _arr * -> + _j -> 1 `i `x -> -> # *U _arr `i `x ]
"269
[e ++ _j -> 1 `i ]
[e :U 172 ]
[e $ < _j - _n -> 1 `i 169  ]
[e :U 170 ]
"270
}
[; ;main.c: 271: arr[j] = temp;
"271
[e = *U + _arr * -> _j `x -> -> # *U _arr `i `x -> _temp `uc ]
[; ;main.c: 272: }
"272
[e :UE 168 ]
}
"275
[v _left_rotate `(v ~T0 @X0 1 ef3`*uc`i`i ]
"276
{
[; ;main.c: 275: void left_rotate(char arr[], int d, int n)
[; ;main.c: 276: {
[e :U _left_rotate ]
"275
[v _arr `*uc ~T0 @X0 1 r1 ]
[v _d `i ~T0 @X0 1 r2 ]
[v _n `i ~T0 @X0 1 r3 ]
"276
[f ]
"277
[v _k `i ~T0 @X0 1 a ]
[; ;main.c: 277: int k;
[; ;main.c: 278: for (k = 0; k < d; k++)
"278
{
[e = _k -> 0 `i ]
[e $U 177  ]
"279
[e :U 174 ]
[; ;main.c: 279: left_rotate_by_one(arr, n);
[e ( _left_rotate_by_one (2 , _arr _n ]
"278
[e ++ _k -> 1 `i ]
[e :U 177 ]
[e $ < _k _d 174  ]
[e :U 175 ]
"279
}
[; ;main.c: 280: }
"280
[e :UE 173 ]
}
"282
[v _send_data `(v ~T0 @X0 1 ef1`uc ]
"283
{
[; ;main.c: 282: void send_data(unsigned char rw)
[; ;main.c: 283: {
[e :U _send_data ]
"282
[v _rw `uc ~T0 @X0 1 r1 ]
"283
[f ]
"284
[v _mask `ui ~T0 @X0 1 a ]
[v _t `ui ~T0 @X0 1 a ]
[v _flag `ui ~T0 @X0 1 a ]
[; ;main.c: 284: unsigned int mask, t, flag;
[; ;main.c: 285: mask = 0x01;
"285
[e = _mask -> -> 1 `i `ui ]
[; ;main.c: 286: for (t = 0; t < 16; t++)
"286
{
[e = _t -> -> 0 `i `ui ]
[e $ < _t -> -> 16 `i `ui 179  ]
[e $U 180  ]
"287
[e :U 179 ]
[; ;main.c: 287: {
{
[; ;main.c: 288: flag = CHAR_DATA[rw] & mask;
"288
[e = _flag & *U + &U _CHAR_DATA * -> _rw `ux -> -> # *U &U _CHAR_DATA `ui `ux _mask ]
[; ;main.c: 289: if (flag == 0) PORTCbits.RC0 = 0;
"289
[e $ ! == _flag -> -> 0 `i `ui 182  ]
[e = . . _PORTCbits 0 0 -> -> 0 `i `uc ]
[e $U 183  ]
"290
[e :U 182 ]
[; ;main.c: 290: else PORTCbits.RC0 = 1;
[e = . . _PORTCbits 0 0 -> -> 1 `i `uc ]
[e :U 183 ]
[; ;main.c: 291: PORTCbits.RC1 = 1;
"291
[e = . . _PORTCbits 0 1 -> -> 1 `i `uc ]
[; ;main.c: 292: PORTCbits.RC1 = 0;
"292
[e = . . _PORTCbits 0 1 -> -> 0 `i `uc ]
[; ;main.c: 293: mask = mask << 1;
"293
[e = _mask << _mask -> 1 `i ]
"294
}
"286
[e ++ _t -> -> 1 `i `ui ]
[e $ < _t -> -> 16 `i `ui 179  ]
[e :U 180 ]
"294
}
[; ;main.c: 294: }
[; ;main.c: 296: PORTCbits.RC2 = 1;
"296
[e = . . _PORTCbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 297: PORTCbits.RC2 = 0;
"297
[e = . . _PORTCbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 298: }
"298
[e :UE 178 ]
}
"300
[v _display `(v ~T0 @X0 1 ef1`uc ]
"301
{
[; ;main.c: 300: void display(unsigned char ch)
[; ;main.c: 301: {
[e :U _display ]
"300
[v _ch `uc ~T0 @X0 1 r1 ]
"301
[f ]
[; ;main.c: 302: send_data(ch - 32);
"302
[e ( _send_data (1 -> - -> _ch `i -> 32 `i `uc ]
[; ;main.c: 303: }
"303
[e :UE 184 ]
}
"306
[v _control_speed `(v ~T0 @X0 1 ef ]
"307
{
[; ;main.c: 306: void control_speed()
[; ;main.c: 307: {
[e :U _control_speed ]
[f ]
[; ;main.c: 308: if (button_pressed == HASH)
"308
[e $ ! == -> _button_pressed `i -> . `E1851 7 `i 186  ]
[; ;main.c: 309: {
"309
{
[; ;main.c: 310: speed -= 100;
"310
[e =- _speed -> 100 `i ]
[; ;main.c: 311: if (speed < 200) speed = 200;
"311
[e $ ! < _speed -> 200 `i 187  ]
[e = _speed -> 200 `i ]
[e :U 187 ]
[; ;main.c: 312: button_pressed = DEFAULT;
"312
[e = _button_pressed . `E1851 0 ]
"313
}
[e :U 186 ]
[; ;main.c: 313: }
[; ;main.c: 315: if (button_pressed == STAR)
"315
[e $ ! == -> _button_pressed `i -> . `E1851 8 `i 188  ]
[; ;main.c: 316: {
"316
{
[; ;main.c: 317: speed += 100;
"317
[e =+ _speed -> 100 `i ]
[; ;main.c: 318: if (speed > 1600) speed = 1600;
"318
[e $ ! > _speed -> 1600 `i 189  ]
[e = _speed -> 1600 `i ]
[e :U 189 ]
[; ;main.c: 319: button_pressed = DEFAULT;
"319
[e = _button_pressed . `E1851 0 ]
"320
}
[e :U 188 ]
[; ;main.c: 320: }
[; ;main.c: 321: delay();
"321
[e ( _delay ..  ]
[; ;main.c: 322: }
"322
[e :UE 185 ]
}
"326
[v _choose_digit_display `(v ~T0 @X0 1 ef1`uc ]
"327
{
[; ;main.c: 326: void choose_digit_display(char n)
[; ;main.c: 327: {
[e :U _choose_digit_display ]
"326
[v _n `uc ~T0 @X0 1 r1 ]
"327
[f ]
[; ;main.c: 328: button_pressed = DEFAULT;
"328
[e = _button_pressed . `E1851 0 ]
[; ;main.c: 330: if (character == '_')
"330
[e $ ! == -> _character `ui -> 95 `ui 191  ]
[; ;main.c: 331: {
"331
{
[; ;main.c: 332: buffer[n] = ' ';
"332
[e = *U + &U _buffer * -> _n `ux -> -> # *U &U _buffer `ui `ux -> -> 32 `ui `uc ]
[; ;main.c: 333: message[index] = ' ';
"333
[e = *U + &U _message * -> _index `ux -> -> # *U &U _message `ui `ux -> -> 32 `ui `uc ]
"334
}
[; ;main.c: 334: }
[e $U 192  ]
"335
[e :U 191 ]
[; ;main.c: 335: else
[; ;main.c: 336: {
"336
{
[; ;main.c: 337: buffer[n] = character;
"337
[e = *U + &U _buffer * -> _n `ux -> -> # *U &U _buffer `ui `ux _character ]
[; ;main.c: 338: message[index] = character;
"338
[e = *U + &U _message * -> _index `ux -> -> # *U &U _message `ui `ux _character ]
"339
}
[e :U 192 ]
[; ;main.c: 339: }
[; ;main.c: 340: character = '_';
"340
[e = _character -> -> 95 `ui `uc ]
[; ;main.c: 341: cursor++;
"341
[e ++ _cursor -> -> 1 `i `uc ]
[; ;main.c: 342: index++;
"342
[e ++ _index -> -> 1 `i `ui ]
[; ;main.c: 343: }
"343
[e :UE 190 ]
}
[v $root$_isr `(v ~T0 @X0 0 e ]
[v F1915 `(v ~T0 @X0 1 tf ]
"349
[v _isr `IF1915 ~T0 @X0 1 e ]
"350
{
[; ;main.c: 349: void interrupt isr(void)
[; ;main.c: 350: {
[e :U _isr ]
[f ]
[; ;main.c: 351: if (INTCONbits.T0IF == 1)
"351
[e $ ! == -> . . _INTCONbits 0 2 `i -> 1 `i 194  ]
[; ;main.c: 352: {
"352
{
[; ;main.c: 353: TMR0 = 100;
"353
[e = _TMR0 -> -> 100 `i `uc ]
[; ;main.c: 354: INTCONbits.T0IF = 0;
"354
[e = . . _INTCONbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 356: switch (display_flag)
"356
[e $U 196  ]
[; ;main.c: 357: {
"357
{
[; ;main.c: 358: case 0:
"358
[e :U 197 ]
[; ;main.c: 359: {
"359
{
[; ;main.c: 360: PORTAbits.RA5 = 1;
"360
[e = . . _PORTAbits 0 5 -> -> 1 `i `uc ]
[; ;main.c: 361: if (cursor == 0) display(character);
"361
[e $ ! == -> _cursor `i -> 0 `i 198  ]
[e ( _display (1 _character ]
[e $U 199  ]
"362
[e :U 198 ]
[; ;main.c: 362: else display(buffer[0]);
[e ( _display (1 *U + &U _buffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _buffer `ui `ux ]
[e :U 199 ]
[; ;main.c: 363: PORTAbits.RA0 = 0;
"363
[e = . . _PORTAbits 0 0 -> -> 0 `i `uc ]
[; ;main.c: 364: display_flag = 1;
"364
[e = _display_flag -> -> 1 `i `uc ]
[; ;main.c: 365: break;
"365
[e $U 195  ]
"366
}
[; ;main.c: 366: }
[; ;main.c: 367: case 1:
"367
[e :U 200 ]
[; ;main.c: 368: {
"368
{
[; ;main.c: 369: PORTAbits.RA0 = 1;
"369
[e = . . _PORTAbits 0 0 -> -> 1 `i `uc ]
[; ;main.c: 370: if (cursor == 1) display(character);
"370
[e $ ! == -> _cursor `i -> 1 `i 201  ]
[e ( _display (1 _character ]
[e $U 202  ]
"371
[e :U 201 ]
[; ;main.c: 371: else display(buffer[1]);
[e ( _display (1 *U + &U _buffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _buffer `ui `ux ]
[e :U 202 ]
[; ;main.c: 372: PORTAbits.RA1 = 0;
"372
[e = . . _PORTAbits 0 1 -> -> 0 `i `uc ]
[; ;main.c: 373: display_flag = 2;
"373
[e = _display_flag -> -> 2 `i `uc ]
[; ;main.c: 374: break;
"374
[e $U 195  ]
"375
}
[; ;main.c: 375: }
[; ;main.c: 376: case 2:
"376
[e :U 203 ]
[; ;main.c: 377: {
"377
{
[; ;main.c: 378: PORTAbits.RA1 = 1;
"378
[e = . . _PORTAbits 0 1 -> -> 1 `i `uc ]
[; ;main.c: 379: if (cursor == 2) display(character);
"379
[e $ ! == -> _cursor `i -> 2 `i 204  ]
[e ( _display (1 _character ]
[e $U 205  ]
"380
[e :U 204 ]
[; ;main.c: 380: else display(buffer[2]);
[e ( _display (1 *U + &U _buffer * -> -> -> 2 `i `ui `ux -> -> # *U &U _buffer `ui `ux ]
[e :U 205 ]
[; ;main.c: 381: PORTAbits.RA2 = 0;
"381
[e = . . _PORTAbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 382: display_flag = 3;
"382
[e = _display_flag -> -> 3 `i `uc ]
[; ;main.c: 383: break;
"383
[e $U 195  ]
"384
}
[; ;main.c: 384: }
[; ;main.c: 385: case 3:
"385
[e :U 206 ]
[; ;main.c: 386: {
"386
{
[; ;main.c: 387: PORTAbits.RA2 = 1;
"387
[e = . . _PORTAbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 388: if (cursor == 3) display(character);
"388
[e $ ! == -> _cursor `i -> 3 `i 207  ]
[e ( _display (1 _character ]
[e $U 208  ]
"389
[e :U 207 ]
[; ;main.c: 389: else display(buffer[3]);
[e ( _display (1 *U + &U _buffer * -> -> -> 3 `i `ui `ux -> -> # *U &U _buffer `ui `ux ]
[e :U 208 ]
[; ;main.c: 390: PORTAbits.RA3 = 0;
"390
[e = . . _PORTAbits 0 3 -> -> 0 `i `uc ]
[; ;main.c: 391: display_flag = 4;
"391
[e = _display_flag -> -> 4 `i `uc ]
[; ;main.c: 392: break;
"392
[e $U 195  ]
"393
}
[; ;main.c: 393: }
[; ;main.c: 394: case 4:
"394
[e :U 209 ]
[; ;main.c: 395: {
"395
{
[; ;main.c: 396: PORTAbits.RA3 = 1;
"396
[e = . . _PORTAbits 0 3 -> -> 1 `i `uc ]
[; ;main.c: 397: if (cursor == 4) display(character);
"397
[e $ ! == -> _cursor `i -> 4 `i 210  ]
[e ( _display (1 _character ]
[e $U 211  ]
"398
[e :U 210 ]
[; ;main.c: 398: else display(buffer[4]);
[e ( _display (1 *U + &U _buffer * -> -> -> 4 `i `ui `ux -> -> # *U &U _buffer `ui `ux ]
[e :U 211 ]
[; ;main.c: 399: PORTAbits.RA4 = 0;
"399
[e = . . _PORTAbits 0 4 -> -> 0 `i `uc ]
[; ;main.c: 400: display_flag = 5;
"400
[e = _display_flag -> -> 5 `i `uc ]
[; ;main.c: 401: break;
"401
[e $U 195  ]
"402
}
[; ;main.c: 402: }
[; ;main.c: 403: case 5:
"403
[e :U 212 ]
[; ;main.c: 404: {
"404
{
[; ;main.c: 405: PORTAbits.RA4 = 1;
"405
[e = . . _PORTAbits 0 4 -> -> 1 `i `uc ]
[; ;main.c: 406: if (cursor == 5) display(character);
"406
[e $ ! == -> _cursor `i -> 5 `i 213  ]
[e ( _display (1 _character ]
[e $U 214  ]
"407
[e :U 213 ]
[; ;main.c: 407: else display(buffer[5]);
[e ( _display (1 *U + &U _buffer * -> -> -> 5 `i `ui `ux -> -> # *U &U _buffer `ui `ux ]
[e :U 214 ]
[; ;main.c: 408: PORTAbits.RA5 = 0;
"408
[e = . . _PORTAbits 0 5 -> -> 0 `i `uc ]
[; ;main.c: 409: display_flag = 0;
"409
[e = _display_flag -> -> 0 `i `uc ]
[; ;main.c: 410: break;
"410
[e $U 195  ]
"411
}
"413
}
[; ;main.c: 411: }
[; ;main.c: 413: }
[e $U 195  ]
"356
[e :U 196 ]
[e [\ _display_flag , $ -> -> 0 `i `uc 197
 , $ -> -> 1 `i `uc 200
 , $ -> -> 2 `i `uc 203
 , $ -> -> 3 `i `uc 206
 , $ -> -> 4 `i `uc 209
 , $ -> -> 5 `i `uc 212
 195 ]
"413
[e :U 195 ]
"415
}
[e :U 194 ]
[; ;main.c: 415: }
[; ;main.c: 418: if (INTCONbits.RBIF == 1)
"418
[e $ ! == -> . . _INTCONbits 0 0 `i -> 1 `i 215  ]
[; ;main.c: 419: {
"419
{
[; ;main.c: 420: TMR2 = 0;
"420
[e = _TMR2 -> -> 0 `i `uc ]
[; ;main.c: 421: T2CONbits.TMR2ON = 1;
"421
[e = . . _T2CONbits 0 1 -> -> 1 `i `uc ]
[; ;main.c: 423: PORTAbits.RA6 = 1;
"423
[e = . . _PORTAbits 0 6 -> -> 1 `i `uc ]
[; ;main.c: 424: pressed_time++;
"424
[e ++ _pressed_time -> -> 1 `i `ui ]
[; ;main.c: 425: if (pressed_time > 12500) pressed_time = 0;
"425
[e $ ! > _pressed_time -> -> 12500 `i `ui 216  ]
[e = _pressed_time -> -> 0 `i `ui ]
[e :U 216 ]
[; ;main.c: 427: PORTB = 0b00001110;
"427
[e = _PORTB -> -> 14 `i `uc ]
[; ;main.c: 428: if (!PORTBbits.RB7)
"428
[e $ ! ! != -> . . _PORTBbits 0 7 `i -> -> -> 0 `i `Vuc `i 217  ]
[; ;main.c: 429: {
"429
{
[; ;main.c: 430: character = '1';
"430
[e = _character -> -> 49 `ui `uc ]
"431
}
[e :U 217 ]
[; ;main.c: 431: }
[; ;main.c: 433: if (!PORTBbits.RB6)
"433
[e $ ! ! != -> . . _PORTBbits 0 6 `i -> -> -> 0 `i `Vuc `i 218  ]
[; ;main.c: 434: {
"434
{
[; ;main.c: 435: character = '2';
"435
[e = _character -> -> 50 `ui `uc ]
[; ;main.c: 436: if (pressed_time > 2500) character = 'A';
"436
[e $ ! > _pressed_time -> -> 2500 `i `ui 219  ]
[e = _character -> -> 65 `ui `uc ]
[e :U 219 ]
[; ;main.c: 437: if (pressed_time > 5000) character = 'B';
"437
[e $ ! > _pressed_time -> -> 5000 `i `ui 220  ]
[e = _character -> -> 66 `ui `uc ]
[e :U 220 ]
[; ;main.c: 438: if (pressed_time > 7500) character = 'C';
"438
[e $ ! > _pressed_time -> -> 7500 `i `ui 221  ]
[e = _character -> -> 67 `ui `uc ]
[e :U 221 ]
"439
}
[e :U 218 ]
[; ;main.c: 439: }
[; ;main.c: 440: if (!PORTBbits.RB5)
"440
[e $ ! ! != -> . . _PORTBbits 0 5 `i -> -> -> 0 `i `Vuc `i 222  ]
[; ;main.c: 441: {
"441
{
[; ;main.c: 442: character = '3';
"442
[e = _character -> -> 51 `ui `uc ]
[; ;main.c: 443: if (pressed_time > 2500) character = 'D';
"443
[e $ ! > _pressed_time -> -> 2500 `i `ui 223  ]
[e = _character -> -> 68 `ui `uc ]
[e :U 223 ]
[; ;main.c: 444: if (pressed_time > 5000) character = 'E';
"444
[e $ ! > _pressed_time -> -> 5000 `i `ui 224  ]
[e = _character -> -> 69 `ui `uc ]
[e :U 224 ]
[; ;main.c: 445: if (pressed_time > 7500) character = 'F';
"445
[e $ ! > _pressed_time -> -> 7500 `i `ui 225  ]
[e = _character -> -> 70 `ui `uc ]
[e :U 225 ]
"446
}
[e :U 222 ]
[; ;main.c: 446: }
[; ;main.c: 447: if (!PORTBbits.RB4)
"447
[e $ ! ! != -> . . _PORTBbits 0 4 `i -> -> -> 0 `i `Vuc `i 226  ]
[; ;main.c: 448: {
"448
{
[; ;main.c: 449: button_pressed = A;
"449
[e = _button_pressed . `E1851 2 ]
[; ;main.c: 450: if (pressed_time > 4000) button_pressed = A_LONG;
"450
[e $ ! > _pressed_time -> -> 4000 `i `ui 227  ]
[e = _button_pressed . `E1851 3 ]
[e :U 227 ]
"451
}
[e :U 226 ]
[; ;main.c: 451: }
[; ;main.c: 454: PORTB = 0b00001101;
"454
[e = _PORTB -> -> 13 `i `uc ]
[; ;main.c: 455: if (!PORTBbits.RB7)
"455
[e $ ! ! != -> . . _PORTBbits 0 7 `i -> -> -> 0 `i `Vuc `i 228  ]
[; ;main.c: 456: {
"456
{
[; ;main.c: 457: character = '4';
"457
[e = _character -> -> 52 `ui `uc ]
[; ;main.c: 458: if (pressed_time > 2500) character = 'G';
"458
[e $ ! > _pressed_time -> -> 2500 `i `ui 229  ]
[e = _character -> -> 71 `ui `uc ]
[e :U 229 ]
[; ;main.c: 459: if (pressed_time > 5000) character = 'H';
"459
[e $ ! > _pressed_time -> -> 5000 `i `ui 230  ]
[e = _character -> -> 72 `ui `uc ]
[e :U 230 ]
[; ;main.c: 460: if (pressed_time > 7500) character = 'I';
"460
[e $ ! > _pressed_time -> -> 7500 `i `ui 231  ]
[e = _character -> -> 73 `ui `uc ]
[e :U 231 ]
"461
}
[e :U 228 ]
[; ;main.c: 461: }
[; ;main.c: 462: if (!PORTBbits.RB6)
"462
[e $ ! ! != -> . . _PORTBbits 0 6 `i -> -> -> 0 `i `Vuc `i 232  ]
[; ;main.c: 463: {
"463
{
[; ;main.c: 464: character = '5';
"464
[e = _character -> -> 53 `ui `uc ]
[; ;main.c: 465: if (pressed_time > 2500) character = 'J';
"465
[e $ ! > _pressed_time -> -> 2500 `i `ui 233  ]
[e = _character -> -> 74 `ui `uc ]
[e :U 233 ]
[; ;main.c: 466: if (pressed_time > 5000) character = 'K';
"466
[e $ ! > _pressed_time -> -> 5000 `i `ui 234  ]
[e = _character -> -> 75 `ui `uc ]
[e :U 234 ]
[; ;main.c: 467: if (pressed_time > 7500) character = 'L';
"467
[e $ ! > _pressed_time -> -> 7500 `i `ui 235  ]
[e = _character -> -> 76 `ui `uc ]
[e :U 235 ]
"468
}
[e :U 232 ]
[; ;main.c: 468: }
[; ;main.c: 469: if (!PORTBbits.RB5)
"469
[e $ ! ! != -> . . _PORTBbits 0 5 `i -> -> -> 0 `i `Vuc `i 236  ]
[; ;main.c: 470: {
"470
{
[; ;main.c: 471: character = '6';
"471
[e = _character -> -> 54 `ui `uc ]
[; ;main.c: 472: if (pressed_time > 2500) character = 'M';
"472
[e $ ! > _pressed_time -> -> 2500 `i `ui 237  ]
[e = _character -> -> 77 `ui `uc ]
[e :U 237 ]
[; ;main.c: 473: if (pressed_time > 5000) character = 'N';
"473
[e $ ! > _pressed_time -> -> 5000 `i `ui 238  ]
[e = _character -> -> 78 `ui `uc ]
[e :U 238 ]
[; ;main.c: 474: if (pressed_time > 7500) character = 'O';
"474
[e $ ! > _pressed_time -> -> 7500 `i `ui 239  ]
[e = _character -> -> 79 `ui `uc ]
[e :U 239 ]
"475
}
[e :U 236 ]
[; ;main.c: 475: }
[; ;main.c: 476: if (!PORTBbits.RB4)
"476
[e $ ! ! != -> . . _PORTBbits 0 4 `i -> -> -> 0 `i `Vuc `i 240  ]
[; ;main.c: 477: {
"477
{
[; ;main.c: 478: button_pressed = B;
"478
[e = _button_pressed . `E1851 4 ]
"479
}
[e :U 240 ]
[; ;main.c: 479: }
[; ;main.c: 482: PORTB = 0b00001011;
"482
[e = _PORTB -> -> 11 `i `uc ]
[; ;main.c: 483: if (!PORTBbits.RB7)
"483
[e $ ! ! != -> . . _PORTBbits 0 7 `i -> -> -> 0 `i `Vuc `i 241  ]
[; ;main.c: 484: {
"484
{
[; ;main.c: 485: character = '7';
"485
[e = _character -> -> 55 `ui `uc ]
[; ;main.c: 486: if (pressed_time > 2500) character = 'P';
"486
[e $ ! > _pressed_time -> -> 2500 `i `ui 242  ]
[e = _character -> -> 80 `ui `uc ]
[e :U 242 ]
[; ;main.c: 487: if (pressed_time > 5000) character = 'Q';
"487
[e $ ! > _pressed_time -> -> 5000 `i `ui 243  ]
[e = _character -> -> 81 `ui `uc ]
[e :U 243 ]
[; ;main.c: 488: if (pressed_time > 7500) character = 'R';
"488
[e $ ! > _pressed_time -> -> 7500 `i `ui 244  ]
[e = _character -> -> 82 `ui `uc ]
[e :U 244 ]
[; ;main.c: 489: if (pressed_time > 10000) character = 'S';
"489
[e $ ! > _pressed_time -> -> 10000 `i `ui 245  ]
[e = _character -> -> 83 `ui `uc ]
[e :U 245 ]
"490
}
[e :U 241 ]
[; ;main.c: 490: }
[; ;main.c: 491: if (!PORTBbits.RB6)
"491
[e $ ! ! != -> . . _PORTBbits 0 6 `i -> -> -> 0 `i `Vuc `i 246  ]
[; ;main.c: 492: {
"492
{
[; ;main.c: 493: character = '8';
"493
[e = _character -> -> 56 `ui `uc ]
[; ;main.c: 494: if (pressed_time > 2500) character = 'T';
"494
[e $ ! > _pressed_time -> -> 2500 `i `ui 247  ]
[e = _character -> -> 84 `ui `uc ]
[e :U 247 ]
[; ;main.c: 495: if (pressed_time > 5000) character = 'U';
"495
[e $ ! > _pressed_time -> -> 5000 `i `ui 248  ]
[e = _character -> -> 85 `ui `uc ]
[e :U 248 ]
[; ;main.c: 496: if (pressed_time > 7500) character = 'V';
"496
[e $ ! > _pressed_time -> -> 7500 `i `ui 249  ]
[e = _character -> -> 86 `ui `uc ]
[e :U 249 ]
"497
}
[e :U 246 ]
[; ;main.c: 497: }
[; ;main.c: 498: if (!PORTBbits.RB5)
"498
[e $ ! ! != -> . . _PORTBbits 0 5 `i -> -> -> 0 `i `Vuc `i 250  ]
[; ;main.c: 499: {
"499
{
[; ;main.c: 500: character = '9';
"500
[e = _character -> -> 57 `ui `uc ]
[; ;main.c: 501: if (pressed_time > 2500) character = 'W';
"501
[e $ ! > _pressed_time -> -> 2500 `i `ui 251  ]
[e = _character -> -> 87 `ui `uc ]
[e :U 251 ]
[; ;main.c: 502: if (pressed_time > 5000) character = 'X';
"502
[e $ ! > _pressed_time -> -> 5000 `i `ui 252  ]
[e = _character -> -> 88 `ui `uc ]
[e :U 252 ]
[; ;main.c: 503: if (pressed_time > 7500) character = 'Y';
"503
[e $ ! > _pressed_time -> -> 7500 `i `ui 253  ]
[e = _character -> -> 89 `ui `uc ]
[e :U 253 ]
[; ;main.c: 504: if (pressed_time > 10000) character = 'Z';
"504
[e $ ! > _pressed_time -> -> 10000 `i `ui 254  ]
[e = _character -> -> 90 `ui `uc ]
[e :U 254 ]
"505
}
[e :U 250 ]
[; ;main.c: 505: }
[; ;main.c: 506: if (!PORTBbits.RB4)
"506
[e $ ! ! != -> . . _PORTBbits 0 4 `i -> -> -> 0 `i `Vuc `i 255  ]
[; ;main.c: 507: {
"507
{
[; ;main.c: 508: button_pressed = C;
"508
[e = _button_pressed . `E1851 5 ]
"509
}
[e :U 255 ]
[; ;main.c: 509: }
[; ;main.c: 512: PORTB = 0b00000111;
"512
[e = _PORTB -> -> 7 `i `uc ]
[; ;main.c: 513: if (!PORTBbits.RB7)
"513
[e $ ! ! != -> . . _PORTBbits 0 7 `i -> -> -> 0 `i `Vuc `i 256  ]
[; ;main.c: 514: {
"514
{
[; ;main.c: 515: button_pressed = STAR;
"515
[e = _button_pressed . `E1851 8 ]
"516
}
[e :U 256 ]
[; ;main.c: 516: }
[; ;main.c: 517: if (!PORTBbits.RB6)
"517
[e $ ! ! != -> . . _PORTBbits 0 6 `i -> -> -> 0 `i `Vuc `i 257  ]
[; ;main.c: 518: {
"518
{
[; ;main.c: 519: character = '0';
"519
[e = _character -> -> 48 `ui `uc ]
[; ;main.c: 520: if (pressed_time > 2500) character = ' ';
"520
[e $ ! > _pressed_time -> -> 2500 `i `ui 258  ]
[e = _character -> -> 32 `ui `uc ]
[e :U 258 ]
[; ;main.c: 521: if (pressed_time > 5000)
"521
[e $ ! > _pressed_time -> -> 5000 `i `ui 259  ]
[; ;main.c: 522: {
"522
{
[; ;main.c: 523: character = '0';
"523
[e = _character -> -> 48 `ui `uc ]
[; ;main.c: 524: pressed_time = 0;
"524
[e = _pressed_time -> -> 0 `i `ui ]
"525
}
[e :U 259 ]
"526
}
[e :U 257 ]
[; ;main.c: 525: }
[; ;main.c: 526: }
[; ;main.c: 527: if (!PORTBbits.RB5)
"527
[e $ ! ! != -> . . _PORTBbits 0 5 `i -> -> -> 0 `i `Vuc `i 260  ]
[; ;main.c: 528: {
"528
{
[; ;main.c: 529: button_pressed = HASH;
"529
[e = _button_pressed . `E1851 7 ]
"530
}
[e :U 260 ]
[; ;main.c: 530: }
[; ;main.c: 531: if (!PORTBbits.RB4)
"531
[e $ ! ! != -> . . _PORTBbits 0 4 `i -> -> -> 0 `i `Vuc `i 261  ]
[; ;main.c: 532: {
"532
{
[; ;main.c: 533: button_pressed = D;
"533
[e = _button_pressed . `E1851 6 ]
"534
}
[e :U 261 ]
[; ;main.c: 534: }
[; ;main.c: 535: PORTB = 0b00001111;
"535
[e = _PORTB -> -> 15 `i `uc ]
[; ;main.c: 536: PORTB = 0xF0;
"536
[e = _PORTB -> -> 240 `i `uc ]
[; ;main.c: 537: PORTAbits.RA6 = 0;
"537
[e = . . _PORTAbits 0 6 -> -> 0 `i `uc ]
[; ;main.c: 539: INTCONbits.RBIF = 0;
"539
[e = . . _INTCONbits 0 0 -> -> 0 `i `uc ]
"540
}
[e :U 215 ]
[; ;main.c: 540: }
[; ;main.c: 542: }
"542
[e :UE 193 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"549
[v _main `(v ~T0 @X0 1 ef ]
"550
{
[; ;main.c: 549: void main()
[; ;main.c: 550: {
[e :U _main ]
[f ]
[v F1918 `uc ~T0 @X0 -> 0 `x s ]
[i F1918
:U ..
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 0 `c
..
]
"551
[v _blank `uc ~T0 @X0 5  a ]
[; ;main.c: 551: char blank[] = "    ";
[e = _blank F1918 ]
[; ;main.c: 552: init();
"552
[e ( _init ..  ]
[; ;main.c: 554: for (;;)
"554
{
"555
[e :U 263 ]
[; ;main.c: 555: {
{
[; ;main.c: 557: if (TMR2IF == 1)
"557
[e $ ! == -> _TMR2IF `i -> 1 `i 266  ]
[; ;main.c: 558: {
"558
{
[; ;main.c: 559: pressed_time = 0;
"559
[e = _pressed_time -> -> 0 `i `ui ]
"560
}
[e :U 266 ]
[; ;main.c: 560: }
[; ;main.c: 562: if (cursor >= 6)
"562
[e $ ! >= -> _cursor `i -> 6 `i 267  ]
[; ;main.c: 563: {
"563
{
[; ;main.c: 564: cursor = 5;
"564
[e = _cursor -> -> 5 `i `uc ]
[; ;main.c: 565: character = '_';
"565
[e = _character -> -> 95 `ui `uc ]
"566
}
[e :U 267 ]
[; ;main.c: 566: }
[; ;main.c: 568: if (button_pressed == NO_PRESS)
"568
[e $ ! == -> _button_pressed `i -> . `E1851 1 `i 268  ]
[; ;main.c: 569: {
"569
{
"570
[v _message_length `s ~T0 @X0 1 a ]
[; ;main.c: 570: short message_length;
[; ;main.c: 571: message_length = strlen(greeting_message);
"571
[e = _message_length -> ( _strlen (1 -> &U _greeting_message `*Cuc `s ]
[; ;main.c: 572: button_pressed = DEFAULT;
"572
[e = _button_pressed . `E1851 0 ]
[; ;main.c: 573: cursor = 6;
"573
[e = _cursor -> -> 6 `i `uc ]
[; ;main.c: 574: index = 0;
"574
[e = _index -> -> 0 `i `ui ]
[; ;main.c: 575: while (1)
"575
[e :U 270 ]
[; ;main.c: 576: {
"576
{
[; ;main.c: 577: control_speed();
"577
[e ( _control_speed ..  ]
[; ;main.c: 578: strncpy(buffer, greeting_message, 6);
"578
[e ( _strncpy (3 , , &U _buffer -> &U _greeting_message `*Cuc -> -> 6 `i `ui ]
[; ;main.c: 579: left_rotate(greeting_message, 1, message_length);
"579
[e ( _left_rotate (3 , , &U _greeting_message -> 1 `i -> _message_length `i ]
[; ;main.c: 580: if (button_pressed == A)
"580
[e $ ! == -> _button_pressed `i -> . `E1851 2 `i 272  ]
[; ;main.c: 581: {
"581
{
[; ;main.c: 582: button_pressed = DEFAULT;
"582
[e = _button_pressed . `E1851 0 ]
[; ;main.c: 583: clear();
"583
[e ( _clear ..  ]
[; ;main.c: 584: break;
"584
[e $U 271  ]
"585
}
[e :U 272 ]
[; ;main.c: 585: }
[; ;main.c: 586: if (button_pressed == B) break;
"586
[e $ ! == -> _button_pressed `i -> . `E1851 4 `i 273  ]
[e $U 271  ]
[e :U 273 ]
"587
}
[e :U 269 ]
"575
[e $U 270  ]
[e :U 271 ]
[; ;main.c: 587: }
[; ;main.c: 588: index = 0;
"588
[e = _index -> -> 0 `i `ui ]
"589
}
[e :U 268 ]
[; ;main.c: 589: }
[; ;main.c: 591: if (button_pressed == D)
"591
[e $ ! == -> _button_pressed `i -> . `E1851 6 `i 274  ]
[; ;main.c: 592: {
"592
{
[; ;main.c: 593: clear();
"593
[e ( _clear ..  ]
[; ;main.c: 594: button_pressed = NO_PRESS;
"594
[e = _button_pressed . `E1851 1 ]
[; ;main.c: 595: cursor = 6;
"595
[e = _cursor -> -> 6 `i `uc ]
[; ;main.c: 596: index = 0;
"596
[e = _index -> -> 0 `i `ui ]
"597
}
[e :U 274 ]
[; ;main.c: 597: }
[; ;main.c: 600: if ((button_pressed == A) && (display_flag == 0) && (cursor == 0))
"600
[e $ ! && && == -> _button_pressed `i -> . `E1851 2 `i == -> _display_flag `i -> 0 `i == -> _cursor `i -> 0 `i 275  ]
[; ;main.c: 601: {
"601
{
[; ;main.c: 602: choose_digit_display(0);
"602
[e ( _choose_digit_display (1 -> -> 0 `i `uc ]
"603
}
[e :U 275 ]
[; ;main.c: 603: }
[; ;main.c: 605: if ((button_pressed == A) && (display_flag == 1) && (cursor == 1))
"605
[e $ ! && && == -> _button_pressed `i -> . `E1851 2 `i == -> _display_flag `i -> 1 `i == -> _cursor `i -> 1 `i 276  ]
[; ;main.c: 606: {
"606
{
[; ;main.c: 607: choose_digit_display(1);
"607
[e ( _choose_digit_display (1 -> -> 1 `i `uc ]
"608
}
[e :U 276 ]
[; ;main.c: 608: }
[; ;main.c: 610: if ((button_pressed == A) && (display_flag == 2) && (cursor == 2))
"610
[e $ ! && && == -> _button_pressed `i -> . `E1851 2 `i == -> _display_flag `i -> 2 `i == -> _cursor `i -> 2 `i 277  ]
[; ;main.c: 611: {
"611
{
[; ;main.c: 612: choose_digit_display(2);
"612
[e ( _choose_digit_display (1 -> -> 2 `i `uc ]
"613
}
[e :U 277 ]
[; ;main.c: 613: }
[; ;main.c: 615: if ((button_pressed == A) && (display_flag == 3) && (cursor == 3))
"615
[e $ ! && && == -> _button_pressed `i -> . `E1851 2 `i == -> _display_flag `i -> 3 `i == -> _cursor `i -> 3 `i 278  ]
[; ;main.c: 616: {
"616
{
[; ;main.c: 617: choose_digit_display(3);
"617
[e ( _choose_digit_display (1 -> -> 3 `i `uc ]
"618
}
[e :U 278 ]
[; ;main.c: 618: }
[; ;main.c: 620: if ((button_pressed == A) && (display_flag == 4) && (cursor == 4))
"620
[e $ ! && && == -> _button_pressed `i -> . `E1851 2 `i == -> _display_flag `i -> 4 `i == -> _cursor `i -> 4 `i 279  ]
[; ;main.c: 621: {
"621
{
[; ;main.c: 622: choose_digit_display(4);
"622
[e ( _choose_digit_display (1 -> -> 4 `i `uc ]
"623
}
[e :U 279 ]
[; ;main.c: 623: }
[; ;main.c: 625: if ((button_pressed == A) && (display_flag == 5) && (cursor == 5))
"625
[e $ ! && && == -> _button_pressed `i -> . `E1851 2 `i == -> _display_flag `i -> 5 `i == -> _cursor `i -> 5 `i 280  ]
[; ;main.c: 626: {
"626
{
[; ;main.c: 627: if ((buffer[0] == ' ')&&(buffer[1] == ' ')&&
[; ;main.c: 628: (buffer[2] == ' ')&&(buffer[3] == ' ')&&
[; ;main.c: 629: (buffer[4] == ' ')&&(character == '_'))
"629
[e $ ! && && && && && == -> *U + &U _buffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _buffer `ui `ux `ui -> 32 `ui == -> *U + &U _buffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _buffer `ui `ux `ui -> 32 `ui == -> *U + &U _buffer * -> -> -> 2 `i `ui `ux -> -> # *U &U _buffer `ui `ux `ui -> 32 `ui == -> *U + &U _buffer * -> -> -> 3 `i `ui `ux -> -> # *U &U _buffer `ui `ux `ui -> 32 `ui == -> *U + &U _buffer * -> -> -> 4 `i `ui `ux -> -> # *U &U _buffer `ui `ux `ui -> 32 `ui == -> _character `ui -> 95 `ui 281  ]
[; ;main.c: 630: {
"630
{
[; ;main.c: 631: button_pressed = NO_PRESS;
"631
[e = _button_pressed . `E1851 1 ]
"632
}
[; ;main.c: 632: }
[e $U 282  ]
"633
[e :U 281 ]
[; ;main.c: 633: else choose_digit_display(5);
[e ( _choose_digit_display (1 -> -> 5 `i `uc ]
[e :U 282 ]
"634
[v _buffer_length `s ~T0 @X0 1 a ]
[; ;main.c: 634: short buffer_length = strlen(buffer);
[e = _buffer_length -> ( _strlen (1 -> &U _buffer `*Cuc `s ]
[; ;main.c: 635: left_rotate(buffer, 1, buffer_length);
"635
[e ( _left_rotate (3 , , &U _buffer -> 1 `i -> _buffer_length `i ]
"636
}
[e :U 280 ]
[; ;main.c: 636: }
[; ;main.c: 640: if ((button_pressed == A_LONG)&&(display_flag > 1)&&(cursor > 1))
"640
[e $ ! && && == -> _button_pressed `i -> . `E1851 3 `i > -> _display_flag `i -> 1 `i > -> _cursor `i -> 1 `i 283  ]
[; ;main.c: 641: {
"641
{
[; ;main.c: 642: if ((cursor < 6) && (strlen(message) < 6))
"642
[e $ ! && < -> _cursor `i -> 6 `i < ( _strlen (1 -> &U _message `*Cuc -> -> 6 `i `ui 284  ]
[; ;main.c: 643: {
"643
{
[; ;main.c: 645: strncat(message, blank, 6 - cursor);
"645
[e ( _strncat (3 , , &U _message -> &U _blank `*Cuc -> - -> 6 `i -> _cursor `i `ui ]
"647
}
[e :U 284 ]
[; ;main.c: 647: }
[; ;main.c: 648: if (strlen(message) > 6) rTrim(message);
"648
[e $ ! > ( _strlen (1 -> &U _message `*Cuc -> -> 6 `i `ui 285  ]
[e ( _rTrim (1 &U _message ]
[e :U 285 ]
[; ;main.c: 649: strncat(message, blank, 4);
"649
[e ( _strncat (3 , , &U _message -> &U _blank `*Cuc -> -> 4 `i `ui ]
"650
[v _message_length `s ~T0 @X0 1 a ]
[; ;main.c: 650: short message_length;
[; ;main.c: 651: button_pressed = DEFAULT;
"651
[e = _button_pressed . `E1851 0 ]
[; ;main.c: 652: cursor = 6;
"652
[e = _cursor -> -> 6 `i `uc ]
[; ;main.c: 653: index = 0;
"653
[e = _index -> -> 0 `i `ui ]
[; ;main.c: 655: message_length = strlen(message);
"655
[e = _message_length -> ( _strlen (1 -> &U _message `*Cuc `s ]
[; ;main.c: 657: while (button_pressed != D)
"657
[e $U 286  ]
[e :U 287 ]
[; ;main.c: 658: {
"658
{
[; ;main.c: 659: control_speed();
"659
[e ( _control_speed ..  ]
[; ;main.c: 660: strncpy(buffer, message, 6);
"660
[e ( _strncpy (3 , , &U _buffer -> &U _message `*Cuc -> -> 6 `i `ui ]
[; ;main.c: 661: left_rotate(message, 1, message_length);
"661
[e ( _left_rotate (3 , , &U _message -> 1 `i -> _message_length `i ]
"662
}
[e :U 286 ]
"657
[e $ != -> _button_pressed `i -> . `E1851 6 `i 287  ]
[e :U 288 ]
[; ;main.c: 662: }
[; ;main.c: 663: clear();
"663
[e ( _clear ..  ]
[; ;main.c: 664: button_pressed = NO_PRESS;
"664
[e = _button_pressed . `E1851 1 ]
[; ;main.c: 665: index = 0;
"665
[e = _index -> -> 0 `i `ui ]
"666
}
[e :U 283 ]
[; ;main.c: 666: }
[; ;main.c: 668: if (button_pressed == B)
"668
[e $ ! == -> _button_pressed `i -> . `E1851 4 `i 289  ]
[; ;main.c: 669: {
"669
{
"670
[v _message_length `s ~T0 @X0 1 a ]
[; ;main.c: 670: short message_length;
[; ;main.c: 671: button_pressed = DEFAULT;
"671
[e = _button_pressed . `E1851 0 ]
[; ;main.c: 672: cursor = 6;
"672
[e = _cursor -> -> 6 `i `uc ]
[; ;main.c: 673: index = 0;
"673
[e = _index -> -> 0 `i `ui ]
[; ;main.c: 674: read_eeprom();
"674
[e ( _read_eeprom ..  ]
[; ;main.c: 677: message_length = strlen(message);
"677
[e = _message_length -> ( _strlen (1 -> &U _message `*Cuc `s ]
[; ;main.c: 679: while (button_pressed != D)
"679
[e $U 290  ]
[e :U 291 ]
[; ;main.c: 680: {
"680
{
[; ;main.c: 681: control_speed();
"681
[e ( _control_speed ..  ]
[; ;main.c: 682: strncpy(buffer, message, 6);
"682
[e ( _strncpy (3 , , &U _buffer -> &U _message `*Cuc -> -> 6 `i `ui ]
[; ;main.c: 683: left_rotate(message, 1, message_length);
"683
[e ( _left_rotate (3 , , &U _message -> 1 `i -> _message_length `i ]
"684
}
[e :U 290 ]
"679
[e $ != -> _button_pressed `i -> . `E1851 6 `i 291  ]
[e :U 292 ]
[; ;main.c: 684: }
[; ;main.c: 685: clear();
"685
[e ( _clear ..  ]
[; ;main.c: 686: button_pressed = NO_PRESS;
"686
[e = _button_pressed . `E1851 1 ]
[; ;main.c: 687: index = 0;
"687
[e = _index -> -> 0 `i `ui ]
"688
}
[e :U 289 ]
[; ;main.c: 688: }
[; ;main.c: 690: if ((button_pressed == C)&&(display_flag > 1)&&(cursor > 1))
"690
[e $ ! && && == -> _button_pressed `i -> . `E1851 5 `i > -> _display_flag `i -> 1 `i > -> _cursor `i -> 1 `i 293  ]
[; ;main.c: 691: {
"691
{
[; ;main.c: 692: rTrim(message);
"692
[e ( _rTrim (1 &U _message ]
[; ;main.c: 693: strncat(message, blank, 4);
"693
[e ( _strncat (3 , , &U _message -> &U _blank `*Cuc -> -> 4 `i `ui ]
[; ;main.c: 694: button_pressed = DEFAULT;
"694
[e = _button_pressed . `E1851 0 ]
[; ;main.c: 695: save_in_eeprom();
"695
[e ( _save_in_eeprom ..  ]
[; ;main.c: 696: button_pressed = B;
"696
[e = _button_pressed . `E1851 4 ]
[; ;main.c: 697: cursor = 6;
"697
[e = _cursor -> -> 6 `i `uc ]
[; ;main.c: 698: index = 0;
"698
[e = _index -> -> 0 `i `ui ]
"699
}
[e :U 293 ]
"701
}
[; ;main.c: 699: }
[; ;main.c: 701: }
[e $U 263  ]
[e :U 264 ]
}
[; ;main.c: 702: }
"702
[e :UE 262 ]
}
